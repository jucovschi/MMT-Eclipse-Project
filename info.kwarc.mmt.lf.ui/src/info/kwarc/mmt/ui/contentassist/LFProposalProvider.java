/*
 * generated by Xtext
 */
package info.kwarc.mmt.ui.contentassist;

import info.kwarc.mmt.MMTProject.MMTNature;
import info.kwarc.mmt.lF.TempType;

import java.util.List;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ConfigurableCompletionProposal;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class LFProposalProvider extends AbstractLFProposalProvider {
	@Override
	public void complete_URISTRING(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		String prefix = context.getPrefix();
		
	}
	
	@Override
	public void completeSigDefinitions_Constucts(EObject model,
			Assignment assignment, ContentAssistContext context,
			ICompletionProposalAcceptor acceptor) {
		String prefix = context.getPrefix();
		EObject obj;
		for (obj = model; !(obj == null || obj instanceof TempType); obj=obj.eContainer());
		String URI=((TempType)obj).getFullURI();
		Resource r = model.eResource();
		IProject proj = ResourcesPlugin.getWorkspace().getRoot().getProject(r.getURI().segment(1));
		try {
			MMTNature nature = (MMTNature) proj.getNature("MMTProject.mmtnature");
			List<String> auto = nature.computeAuto(URI, prefix);
			for(String s : auto) {
				if (s.startsWith(URI))
					s = s.substring(URI.length());
				else
					s = s.substring(s.indexOf('?'));
				if (s.startsWith("?"))
					s = s.substring(1);
				//ConfigurableCompletionProposal prop = new ConfigurableCompletionProposal(prefix+s, context.getOffset()-prefix.length(), prefix.length(), s.length());
				acceptor.accept(createCompletionProposal(prefix+s, s, null, context));
				//acceptor.accept(prop);
			}
			ResourceSet rset = r.getResourceSet();
			super.completeSigDefinitions_Constucts(model, assignment, context, acceptor);
		} catch (CoreException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}

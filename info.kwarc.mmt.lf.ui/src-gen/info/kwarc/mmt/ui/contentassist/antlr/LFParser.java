/*
* generated by Xtext
*/
package info.kwarc.mmt.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import info.kwarc.mmt.services.LFGrammarAccess;

public class LFParser extends AbstractContentAssistParser {
	
	@Inject
	private LFGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected info.kwarc.mmt.ui.contentassist.antlr.internal.InternalLFParser createParser() {
		info.kwarc.mmt.ui.contentassist.antlr.internal.InternalLFParser result = new info.kwarc.mmt.ui.contentassist.antlr.internal.InternalLFParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getConstructsAlternatives_2_0_0(), "rule__Model__ConstructsAlternatives_2_0_0");
					put(grammarAccess.getModelAccess().getAlternatives_2_1_1(), "rule__Model__Alternatives_2_1_1");
					put(grammarAccess.getModelConstructNOSPAccess().getAlternatives(), "rule__ModelConstructNOSP__Alternatives");
					put(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsAlternatives_4_0(), "rule__ModelConstructNOSP__RawDeclarationsAlternatives_4_0");
					put(grammarAccess.getAnyTerminalAccess().getAlternatives(), "rule__AnyTerminal__Alternatives");
					put(grammarAccess.getWSAccess().getAlternatives(), "rule__WS__Alternatives");
					put(grammarAccess.getTermPiAccess().getNameAlternatives_2_0(), "rule__TermPi__NameAlternatives_2_0");
					put(grammarAccess.getTermLambdaAccess().getNameAlternatives_2_0(), "rule__TermLambda__NameAlternatives_2_0");
					put(grammarAccess.getTermArrAccess().getAlternatives_1_2(), "rule__TermArr__Alternatives_1_2");
					put(grammarAccess.getTermAppOrLambdaOrPiAccess().getAlternatives(), "rule__TermAppOrLambdaOrPi__Alternatives");
					put(grammarAccess.getTermLambdaOrPiAccess().getQuantifiersAlternatives_0_0_0(), "rule__TermLambdaOrPi__QuantifiersAlternatives_0_0_0");
					put(grammarAccess.getTermBaseAccess().getAlternatives(), "rule__TermBase__Alternatives");
					put(grammarAccess.getTermAtomicAccess().getAlternatives(), "rule__TermAtomic__Alternatives");
					put(grammarAccess.getFixityDeclarationAccess().getAlternatives_0(), "rule__FixityDeclaration__Alternatives_0");
					put(grammarAccess.getStructDeclarationAccess().getAlternatives_4(), "rule__StructDeclaration__Alternatives_4");
					put(grammarAccess.getStructDeclarationAccess().getAlternatives_4_1_4_3(), "rule__StructDeclaration__Alternatives_4_1_4_3");
					put(grammarAccess.getAnyDirectiveAccess().getAlternatives(), "rule__AnyDirective__Alternatives");
					put(grammarAccess.getAnyConstructAccess().getAlternatives_0(), "rule__AnyConstruct__Alternatives_0");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1(), "rule__UnknownBody__Alternatives_1_1");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1_0_2(), "rule__UnknownBody__Alternatives_1_1_0_2");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1_0_2_1_1(), "rule__UnknownBody__Alternatives_1_1_0_2_1_1");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1_1_1(), "rule__UnknownBody__Alternatives_1_1_1_1");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1_1_1_1_1(), "rule__UnknownBody__Alternatives_1_1_1_1_1_1");
					put(grammarAccess.getUnknownBodyAccess().getAlternatives_1_1_2_2(), "rule__UnknownBody__Alternatives_1_1_2_2");
					put(grammarAccess.getSigConstructNOSPAccess().getAlternatives(), "rule__SigConstructNOSP__Alternatives");
					put(grammarAccess.getSigConstructAccess().getAlternatives(), "rule__SigConstruct__Alternatives");
					put(grammarAccess.getSigBodyAccess().getConstructsAlternatives_3_0_0(), "rule__SigBody__ConstructsAlternatives_3_0_0");
					put(grammarAccess.getSigBodyAccess().getAlternatives_3_1_1(), "rule__SigBody__Alternatives_3_1_1");
					put(grammarAccess.getLinkConstructNOSPAccess().getAlternatives(), "rule__LinkConstructNOSP__Alternatives");
					put(grammarAccess.getLinkConstructAccess().getAlternatives(), "rule__LinkConstruct__Alternatives");
					put(grammarAccess.getLinkBodyAccess().getConstructsAlternatives_3_0_0(), "rule__LinkBody__ConstructsAlternatives_3_0_0");
					put(grammarAccess.getLinkBodyAccess().getAlternatives_3_1_1(), "rule__LinkBody__Alternatives_3_1_1");
					put(grammarAccess.getViewDeclarationAccess().getAlternatives_15(), "rule__ViewDeclaration__Alternatives_15");
					put(grammarAccess.getInternalViewDeclarationAccess().getAlternatives_14(), "rule__InternalViewDeclaration__Alternatives_14");
					put(grammarAccess.getLinkDeclarationAccess().getAlternatives(), "rule__LinkDeclaration__Alternatives");
					put(grammarAccess.getTempTypeAccess().getAlternatives(), "rule__TempType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_2(), "rule__Model__Group_2__0");
					put(grammarAccess.getModelAccess().getGroup_2_1(), "rule__Model__Group_2_1__0");
					put(grammarAccess.getModelAccess().getGroup_2_1_1_1(), "rule__Model__Group_2_1_1_1__0");
					put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
					put(grammarAccess.getIDAccess().getGroup(), "rule__ID__Group__0");
					put(grammarAccess.getIDAccess().getGroup_1(), "rule__ID__Group_1__0");
					put(grammarAccess.getTermPiAccess().getGroup(), "rule__TermPi__Group__0");
					put(grammarAccess.getTermPiAccess().getGroup_4(), "rule__TermPi__Group_4__0");
					put(grammarAccess.getTermLambdaAccess().getGroup(), "rule__TermLambda__Group__0");
					put(grammarAccess.getTermLambdaAccess().getGroup_4(), "rule__TermLambda__Group_4__0");
					put(grammarAccess.getTermArrAccess().getGroup(), "rule__TermArr__Group__0");
					put(grammarAccess.getTermArrAccess().getGroup_1(), "rule__TermArr__Group_1__0");
					put(grammarAccess.getTermAppOrLambdaOrPiAccess().getGroup_1(), "rule__TermAppOrLambdaOrPi__Group_1__0");
					put(grammarAccess.getTermAppOrLambdaOrPiAccess().getGroup_1_1(), "rule__TermAppOrLambdaOrPi__Group_1_1__0");
					put(grammarAccess.getTermAppThenLambdaOrPiAccess().getGroup(), "rule__TermAppThenLambdaOrPi__Group__0");
					put(grammarAccess.getTermAppThenLambdaOrPiAccess().getGroup_1(), "rule__TermAppThenLambdaOrPi__Group_1__0");
					put(grammarAccess.getTermAppNoLambdaNoPiAccess().getGroup(), "rule__TermAppNoLambdaNoPi__Group__0");
					put(grammarAccess.getTermAppNoLambdaNoPiAccess().getGroup_1(), "rule__TermAppNoLambdaNoPi__Group_1__0");
					put(grammarAccess.getTermLambdaOrPiAccess().getGroup(), "rule__TermLambdaOrPi__Group__0");
					put(grammarAccess.getTermLambdaOrPiAccess().getGroup_0(), "rule__TermLambdaOrPi__Group_0__0");
					put(grammarAccess.getTermBaseAccess().getGroup_1(), "rule__TermBase__Group_1__0");
					put(grammarAccess.getTermBaseAccess().getGroup_1_3(), "rule__TermBase__Group_1_3__0");
					put(grammarAccess.getTermBaseAccess().getGroup_1_3_2(), "rule__TermBase__Group_1_3_2__0");
					put(grammarAccess.getMorphismAccess().getGroup(), "rule__Morphism__Group__0");
					put(grammarAccess.getMorphismAccess().getGroup_1(), "rule__Morphism__Group_1__0");
					put(grammarAccess.getTermDeclarationAccess().getGroup(), "rule__TermDeclaration__Group__0");
					put(grammarAccess.getTermDeclarationAccess().getGroup_1_0(), "rule__TermDeclaration__Group_1_0__0");
					put(grammarAccess.getTermDeclarationAccess().getGroup_1_1(), "rule__TermDeclaration__Group_1_1__0");
					put(grammarAccess.getAbbrevTermDeclarationAccess().getGroup(), "rule__AbbrevTermDeclaration__Group__0");
					put(grammarAccess.getNameDeclarationAccess().getGroup(), "rule__NameDeclaration__Group__0");
					put(grammarAccess.getFixityDeclarationAccess().getGroup(), "rule__FixityDeclaration__Group__0");
					put(grammarAccess.getSigMetaDeclarationAccess().getGroup(), "rule__SigMetaDeclaration__Group__0");
					put(grammarAccess.getSigIncludeDeclarationAccess().getGroup(), "rule__SigIncludeDeclaration__Group__0");
					put(grammarAccess.getSigIncludeDeclarationAccess().getGroup_3(), "rule__SigIncludeDeclaration__Group_3__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup(), "rule__StructDeclaration__Group__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_2(), "rule__StructDeclaration__Group_2__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_4_0(), "rule__StructDeclaration__Group_4_0__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_4_1(), "rule__StructDeclaration__Group_4_1__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_4_1_4(), "rule__StructDeclaration__Group_4_1_4__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_4_1_4_3_1(), "rule__StructDeclaration__Group_4_1_4_3_1__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_5(), "rule__StructDeclaration__Group_5__0");
					put(grammarAccess.getIncludeOpsAccess().getGroup(), "rule__IncludeOps__Group__0");
					put(grammarAccess.getIncludeOpsAccess().getGroup_2(), "rule__IncludeOps__Group_2__0");
					put(grammarAccess.getAliasDeclarationAccess().getGroup(), "rule__AliasDeclaration__Group__0");
					put(grammarAccess.getAliasDeclarationAccess().getGroup_1(), "rule__AliasDeclaration__Group_1__0");
					put(grammarAccess.getConstantAssignmentAccess().getGroup(), "rule__ConstantAssignment__Group__0");
					put(grammarAccess.getStructAssignmentAccess().getGroup(), "rule__StructAssignment__Group__0");
					put(grammarAccess.getViewMetaDeclarationAccess().getGroup(), "rule__ViewMetaDeclaration__Group__0");
					put(grammarAccess.getViewIncludeDeclarationAccess().getGroup(), "rule__ViewIncludeDeclaration__Group__0");
					put(grammarAccess.getUnknownBracketsAccess().getGroup(), "rule__UnknownBrackets__Group__0");
					put(grammarAccess.getUnknownBracketsAccess().getGroup_2(), "rule__UnknownBrackets__Group_2__0");
					put(grammarAccess.getAnyConstructAccess().getGroup(), "rule__AnyConstruct__Group__0");
					put(grammarAccess.getAnyConstructAccess().getGroup_0_1(), "rule__AnyConstruct__Group_0_1__0");
					put(grammarAccess.getAnyConstructAccess().getGroup_0_1_1(), "rule__AnyConstruct__Group_0_1_1__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup(), "rule__UnknownBody__Group__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1(), "rule__UnknownBody__Group_1__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1_1_0(), "rule__UnknownBody__Group_1_1_0__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1_1_0_2_1(), "rule__UnknownBody__Group_1_1_0_2_1__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1_1_1(), "rule__UnknownBody__Group_1_1_1__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1_1_1_1_1(), "rule__UnknownBody__Group_1_1_1_1_1__0");
					put(grammarAccess.getUnknownBodyAccess().getGroup_1_1_2(), "rule__UnknownBody__Group_1_1_2__0");
					put(grammarAccess.getUnknownConstructAccess().getGroup(), "rule__UnknownConstruct__Group__0");
					put(grammarAccess.getUnknownConstructAccess().getGroup_1(), "rule__UnknownConstruct__Group_1__0");
					put(grammarAccess.getNamespaceDeclarationAccess().getGroup(), "rule__NamespaceDeclaration__Group__0");
					put(grammarAccess.getNamespaceDeclarationAccess().getGroup_2(), "rule__NamespaceDeclaration__Group_2__0");
					put(grammarAccess.getReadDeclarationAccess().getGroup(), "rule__ReadDeclaration__Group__0");
					put(grammarAccess.getSigBodyAccess().getGroup(), "rule__SigBody__Group__0");
					put(grammarAccess.getSigBodyAccess().getGroup_3(), "rule__SigBody__Group_3__0");
					put(grammarAccess.getSigBodyAccess().getGroup_3_1(), "rule__SigBody__Group_3_1__0");
					put(grammarAccess.getSigBodyAccess().getGroup_3_1_1_1(), "rule__SigBody__Group_3_1_1_1__0");
					put(grammarAccess.getSigDeclarationAccess().getGroup(), "rule__SigDeclaration__Group__0");
					put(grammarAccess.getLinkBodyAccess().getGroup(), "rule__LinkBody__Group__0");
					put(grammarAccess.getLinkBodyAccess().getGroup_3(), "rule__LinkBody__Group_3__0");
					put(grammarAccess.getLinkBodyAccess().getGroup_3_1(), "rule__LinkBody__Group_3_1__0");
					put(grammarAccess.getLinkBodyAccess().getGroup_3_1_1_1(), "rule__LinkBody__Group_3_1_1_1__0");
					put(grammarAccess.getViewDeclarationAccess().getGroup(), "rule__ViewDeclaration__Group__0");
					put(grammarAccess.getViewDeclarationAccess().getGroup_2(), "rule__ViewDeclaration__Group_2__0");
					put(grammarAccess.getViewDeclarationAccess().getGroup_15_1(), "rule__ViewDeclaration__Group_15_1__0");
					put(grammarAccess.getInternalViewDeclarationAccess().getGroup(), "rule__InternalViewDeclaration__Group__0");
					put(grammarAccess.getInternalViewDeclarationAccess().getGroup_2(), "rule__InternalViewDeclaration__Group_2__0");
					put(grammarAccess.getInternalViewDeclarationAccess().getGroup_11(), "rule__InternalViewDeclaration__Group_11__0");
					put(grammarAccess.getInternalViewDeclarationAccess().getGroup_14_1(), "rule__InternalViewDeclaration__Group_14_1__0");
					put(grammarAccess.getModelAccess().getConstructsAssignment_2_0(), "rule__Model__ConstructsAssignment_2_0");
					put(grammarAccess.getModelAccess().getConstructsAssignment_2_1_1_0(), "rule__Model__ConstructsAssignment_2_1_1_0");
					put(grammarAccess.getModelAccess().getConstructsAssignment_2_1_1_1_1(), "rule__Model__ConstructsAssignment_2_1_1_1_1");
					put(grammarAccess.getModelAccess().getNotInDocumentAssignment_3_2(), "rule__Model__NotInDocumentAssignment_3_2");
					put(grammarAccess.getModelConstructNOSPAccess().getNamespaceDeclarationsAssignment_0(), "rule__ModelConstructNOSP__NamespaceDeclarationsAssignment_0");
					put(grammarAccess.getModelConstructNOSPAccess().getReadDeclarationsAssignment_1(), "rule__ModelConstructNOSP__ReadDeclarationsAssignment_1");
					put(grammarAccess.getModelConstructNOSPAccess().getSigDeclarationsAssignment_2(), "rule__ModelConstructNOSP__SigDeclarationsAssignment_2");
					put(grammarAccess.getModelConstructNOSPAccess().getViewDeclarationsAssignment_3(), "rule__ModelConstructNOSP__ViewDeclarationsAssignment_3");
					put(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsAssignment_4(), "rule__ModelConstructNOSP__RawDeclarationsAssignment_4");
					put(grammarAccess.getTermPiAccess().getNameAssignment_2(), "rule__TermPi__NameAssignment_2");
					put(grammarAccess.getTermPiAccess().getTypeAssignment_4_2(), "rule__TermPi__TypeAssignment_4_2");
					put(grammarAccess.getTermLambdaAccess().getNameAssignment_2(), "rule__TermLambda__NameAssignment_2");
					put(grammarAccess.getTermLambdaAccess().getTypeAssignment_4_2(), "rule__TermLambda__TypeAssignment_4_2");
					put(grammarAccess.getTermArrAccess().getRightAssignment_1_4(), "rule__TermArr__RightAssignment_1_4");
					put(grammarAccess.getTermAppOrLambdaOrPiAccess().getLeftAssignment_1_0(), "rule__TermAppOrLambdaOrPi__LeftAssignment_1_0");
					put(grammarAccess.getTermAppOrLambdaOrPiAccess().getRightAssignment_1_1_1(), "rule__TermAppOrLambdaOrPi__RightAssignment_1_1_1");
					put(grammarAccess.getTermAppThenLambdaOrPiAccess().getLeftAssignment_0(), "rule__TermAppThenLambdaOrPi__LeftAssignment_0");
					put(grammarAccess.getTermAppThenLambdaOrPiAccess().getRightAssignment_1_1(), "rule__TermAppThenLambdaOrPi__RightAssignment_1_1");
					put(grammarAccess.getTermAppNoLambdaNoPiAccess().getRightAssignment_1_2(), "rule__TermAppNoLambdaNoPi__RightAssignment_1_2");
					put(grammarAccess.getTermLambdaOrPiAccess().getQuantifiersAssignment_0_0(), "rule__TermLambdaOrPi__QuantifiersAssignment_0_0");
					put(grammarAccess.getTermLambdaOrPiAccess().getRightAssignment_1(), "rule__TermLambdaOrPi__RightAssignment_1");
					put(grammarAccess.getTermBaseAccess().getTermAssignment_0(), "rule__TermBase__TermAssignment_0");
					put(grammarAccess.getTermBaseAccess().getTermAssignment_1_3_0(), "rule__TermBase__TermAssignment_1_3_0");
					put(grammarAccess.getTermBaseAccess().getTypeAssignment_1_3_2_2(), "rule__TermBase__TypeAssignment_1_3_2_2");
					put(grammarAccess.getTermAtomicAccess().getAtomAssignment_0(), "rule__TermAtomic__AtomAssignment_0");
					put(grammarAccess.getTermAtomicAccess().getAtomAssignment_1(), "rule__TermAtomic__AtomAssignment_1");
					put(grammarAccess.getTermAtomicAccess().getAtomAssignment_2(), "rule__TermAtomic__AtomAssignment_2");
					put(grammarAccess.getMorphismAccess().getLinkRefsAssignment_0(), "rule__Morphism__LinkRefsAssignment_0");
					put(grammarAccess.getMorphismAccess().getLinkRefsAssignment_1_1(), "rule__Morphism__LinkRefsAssignment_1_1");
					put(grammarAccess.getTermDeclarationAccess().getNameAssignment_0(), "rule__TermDeclaration__NameAssignment_0");
					put(grammarAccess.getTermDeclarationAccess().getTypeAssignment_1_0_3(), "rule__TermDeclaration__TypeAssignment_1_0_3");
					put(grammarAccess.getTermDeclarationAccess().getDefAssignment_1_1_3(), "rule__TermDeclaration__DefAssignment_1_1_3");
					put(grammarAccess.getNameDeclarationAccess().getNameAssignment_2(), "rule__NameDeclaration__NameAssignment_2");
					put(grammarAccess.getNameDeclarationAccess().getAliasAssignment_4(), "rule__NameDeclaration__AliasAssignment_4");
					put(grammarAccess.getFixityDeclarationAccess().getFixityAssignment_0_0(), "rule__FixityDeclaration__FixityAssignment_0_0");
					put(grammarAccess.getFixityDeclarationAccess().getFixityAssignment_0_1(), "rule__FixityDeclaration__FixityAssignment_0_1");
					put(grammarAccess.getFixityDeclarationAccess().getFixityAssignment_0_2(), "rule__FixityDeclaration__FixityAssignment_0_2");
					put(grammarAccess.getFixityDeclarationAccess().getFixityAssignment_0_3(), "rule__FixityDeclaration__FixityAssignment_0_3");
					put(grammarAccess.getFixityDeclarationAccess().getFixityAssignment_0_4(), "rule__FixityDeclaration__FixityAssignment_0_4");
					put(grammarAccess.getFixityDeclarationAccess().getFixityLevelAssignment_2(), "rule__FixityDeclaration__FixityLevelAssignment_2");
					put(grammarAccess.getFixityDeclarationAccess().getNameAssignment_4(), "rule__FixityDeclaration__NameAssignment_4");
					put(grammarAccess.getSigMetaDeclarationAccess().getRefAssignment_2(), "rule__SigMetaDeclaration__RefAssignment_2");
					put(grammarAccess.getSigIncludeDeclarationAccess().getRefAssignment_2(), "rule__SigIncludeDeclaration__RefAssignment_2");
					put(grammarAccess.getSigIncludeDeclarationAccess().getIncOptAssignment_3_1(), "rule__SigIncludeDeclaration__IncOptAssignment_3_1");
					put(grammarAccess.getStructDeclarationAccess().getNameAssignment_3(), "rule__StructDeclaration__NameAssignment_3");
					put(grammarAccess.getStructDeclarationAccess().getDefAssignment_4_0_3(), "rule__StructDeclaration__DefAssignment_4_0_3");
					put(grammarAccess.getStructDeclarationAccess().getFromAssignment_4_1_3(), "rule__StructDeclaration__FromAssignment_4_1_3");
					put(grammarAccess.getStructDeclarationAccess().getDefAssignment_4_1_4_3_0(), "rule__StructDeclaration__DefAssignment_4_1_4_3_0");
					put(grammarAccess.getStructDeclarationAccess().getDefAssignment_4_1_4_3_1_1(), "rule__StructDeclaration__DefAssignment_4_1_4_3_1_1");
					put(grammarAccess.getStructDeclarationAccess().getIncOptAssignment_5_1(), "rule__StructDeclaration__IncOptAssignment_5_1");
					put(grammarAccess.getIncludeOpsAccess().getAliasesAssignment_2_1(), "rule__IncludeOps__AliasesAssignment_2_1");
					put(grammarAccess.getAliasDeclarationAccess().getOldAssignment_0(), "rule__AliasDeclaration__OldAssignment_0");
					put(grammarAccess.getAliasDeclarationAccess().getNewAssignment_1_3(), "rule__AliasDeclaration__NewAssignment_1_3");
					put(grammarAccess.getConstantAssignmentAccess().getNameAssignment_0(), "rule__ConstantAssignment__NameAssignment_0");
					put(grammarAccess.getConstantAssignmentAccess().getDefAssignment_4(), "rule__ConstantAssignment__DefAssignment_4");
					put(grammarAccess.getStructAssignmentAccess().getNameAssignment_2(), "rule__StructAssignment__NameAssignment_2");
					put(grammarAccess.getStructAssignmentAccess().getDefAssignment_6(), "rule__StructAssignment__DefAssignment_6");
					put(grammarAccess.getViewMetaDeclarationAccess().getDefAssignment_2(), "rule__ViewMetaDeclaration__DefAssignment_2");
					put(grammarAccess.getViewIncludeDeclarationAccess().getDefAssignment_2(), "rule__ViewIncludeDeclaration__DefAssignment_2");
					put(grammarAccess.getUnknownBracketsAccess().getTAssignment_2_1(), "rule__UnknownBrackets__TAssignment_2_1");
					put(grammarAccess.getAnyConstructAccess().getTAssignment_0_0(), "rule__AnyConstruct__TAssignment_0_0");
					put(grammarAccess.getAnyConstructAccess().getDirectiveAssignment_0_1_0(), "rule__AnyConstruct__DirectiveAssignment_0_1_0");
					put(grammarAccess.getAnyConstructAccess().getTAssignment_0_1_1_1(), "rule__AnyConstruct__TAssignment_0_1_1_1");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_0(), "rule__UnknownBody__TAssignment_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_0_2_0(), "rule__UnknownBody__TAssignment_1_1_0_2_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_0_2_1_1_0(), "rule__UnknownBody__TAssignment_1_1_0_2_1_1_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_0_2_1_1_1(), "rule__UnknownBody__TAssignment_1_1_0_2_1_1_1");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_1_1_0(), "rule__UnknownBody__TAssignment_1_1_1_1_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_1_1_1_1_0(), "rule__UnknownBody__TAssignment_1_1_1_1_1_1_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_1_1_1_1_1(), "rule__UnknownBody__TAssignment_1_1_1_1_1_1_1");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_2_2_0(), "rule__UnknownBody__TAssignment_1_1_2_2_0");
					put(grammarAccess.getUnknownBodyAccess().getTAssignment_1_1_2_2_1(), "rule__UnknownBody__TAssignment_1_1_2_2_1");
					put(grammarAccess.getUnknownConstructAccess().getDirectiveAssignment_0(), "rule__UnknownConstruct__DirectiveAssignment_0");
					put(grammarAccess.getUnknownConstructAccess().getTAssignment_1_1(), "rule__UnknownConstruct__TAssignment_1_1");
					put(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_2_0(), "rule__NamespaceDeclaration__NameAssignment_2_0");
					put(grammarAccess.getNamespaceDeclarationAccess().getUriAssignment_3(), "rule__NamespaceDeclaration__UriAssignment_3");
					put(grammarAccess.getReadDeclarationAccess().getFileAssignment_2(), "rule__ReadDeclaration__FileAssignment_2");
					put(grammarAccess.getSigBodyAccess().getConstructsAssignment_3_0(), "rule__SigBody__ConstructsAssignment_3_0");
					put(grammarAccess.getSigBodyAccess().getConstructsAssignment_3_1_1_0(), "rule__SigBody__ConstructsAssignment_3_1_1_0");
					put(grammarAccess.getSigBodyAccess().getConstructsAssignment_3_1_1_1_1(), "rule__SigBody__ConstructsAssignment_3_1_1_1_1");
					put(grammarAccess.getSigDeclarationAccess().getNameAssignment_2(), "rule__SigDeclaration__NameAssignment_2");
					put(grammarAccess.getSigDeclarationAccess().getDefAssignment_6(), "rule__SigDeclaration__DefAssignment_6");
					put(grammarAccess.getLinkBodyAccess().getConstructsAssignment_3_0(), "rule__LinkBody__ConstructsAssignment_3_0");
					put(grammarAccess.getLinkBodyAccess().getConstructsAssignment_3_1_1_0(), "rule__LinkBody__ConstructsAssignment_3_1_1_0");
					put(grammarAccess.getLinkBodyAccess().getConstructsAssignment_3_1_1_1_1(), "rule__LinkBody__ConstructsAssignment_3_1_1_1_1");
					put(grammarAccess.getViewDeclarationAccess().getNameAssignment_3(), "rule__ViewDeclaration__NameAssignment_3");
					put(grammarAccess.getViewDeclarationAccess().getFromAssignment_7(), "rule__ViewDeclaration__FromAssignment_7");
					put(grammarAccess.getViewDeclarationAccess().getToAssignment_11(), "rule__ViewDeclaration__ToAssignment_11");
					put(grammarAccess.getViewDeclarationAccess().getDefAssignment_15_0(), "rule__ViewDeclaration__DefAssignment_15_0");
					put(grammarAccess.getViewDeclarationAccess().getDefAssignment_15_1_1(), "rule__ViewDeclaration__DefAssignment_15_1_1");
					put(grammarAccess.getInternalViewDeclarationAccess().getNameAssignment_3(), "rule__InternalViewDeclaration__NameAssignment_3");
					put(grammarAccess.getInternalViewDeclarationAccess().getFromAssignment_7(), "rule__InternalViewDeclaration__FromAssignment_7");
					put(grammarAccess.getInternalViewDeclarationAccess().getToAssignment_11_0(), "rule__InternalViewDeclaration__ToAssignment_11_0");
					put(grammarAccess.getInternalViewDeclarationAccess().getDefAssignment_14_0(), "rule__InternalViewDeclaration__DefAssignment_14_0");
					put(grammarAccess.getInternalViewDeclarationAccess().getDefAssignment_14_1_1(), "rule__InternalViewDeclaration__DefAssignment_14_1_1");
					put(grammarAccess.getTempTypeAccess().getFullURIAssignment_10(), "rule__TempType__FullURIAssignment_10");
					put(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1(), "rule__TermDeclaration__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			info.kwarc.mmt.ui.contentassist.antlr.internal.InternalLFParser typedParser = (info.kwarc.mmt.ui.contentassist.antlr.internal.InternalLFParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_LINE_COMMENT" };
	}
	
	public LFGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(LFGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

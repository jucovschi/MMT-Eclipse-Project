grammar info.kwarc.mmt.LF //with org.eclipse.xtext.common.Terminals

generate lF "http://www.kwarc.info/mmt/LF"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore


Model:
	declarations+=(namespaceDeclaration | signatureDeclaration  | viewDeclaration | readDeclaration | JUSTSPACE )*; 

terminal INT returns ecore::EInt: ('0'..'9')+;
terminal SP			 : ' '|'\t'|'\r'|'\n';
terminal doubleDot   : '..';
terminal multipleDot : doubleDot '.'+;
terminal CID  		 : ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_'|'#'|'?')+;
terminal ML_COMMENT	 : '%{' -> '}%';
terminal ML2_COMMENT : '%*' -> '*%';
terminal SL_COMMENT  : '%' (' ' | '%') !('\n'|'\r')* ('\r'? '\n')?;
terminal ANY_OTHER: .;

WS : (SP | ML_COMMENT | ML2_COMMENT | SL_COMMENT);

NAMESPACE : (doubleDot '/')* CID ( ('/'|'.') CID)*;
URI : (CID ':' '/' '/')? NAMESPACE;
URISTRING : '"' URI '"' ;
JUSTSPACE: J=WS;

namespaceDeclaration: '%' 'namespace' WS+ (name=CID WS* '=' WS*)? uri=URISTRING WS* '.' WS;

readDeclaration: '%' 'read' WS+ file=URISTRING WS* '.' WS;

GID : (CID | ANY_OTHER | INT)+ ('='+ WS)? | '=' '='+ WS| multipleDot | doubleDot;


SOMETHING: ANY_OTHER | CID | INT | '.' (CID  | ANY_OTHER) | ':' | '=' | '->' | '%' | '{' SOMETHING2* '}'|  multipleDot | doubleDot | WS;
SOMETHING2: ANY_OTHER | CID | INT | '.' | ':' | '=' | '->' | '%' | '{' SOMETHING2* '}'|  multipleDot | doubleDot | WS;

sigOps : ('%' 'meta' | '%' 'abbrev') SOMETHING* '.' WS;


signatureDeclaration: '%' 'sig' WS+ sigName=GID WS* '=' WS*  
					defs=sigDefinitions   WS* '.'; 


sigDefinitions : '{' WS* cons=sigConstruct ('.' WS+ fcons+=sigConstruct)* ('.' WS*)? '}';

sigConstruct : (symbName=GID WS* (':' | ':=' | '=') SOMETHING*) |
				 ('%' 'include' WS+ namespace=NAMESPACE (WS+ includeOps)?) |
				 ('%' 'struct' WS+ structName = GID WS* (':' | ':=') SOMETHING* incOpt=includeOps? ) |
				 ('%' tmp=('meta' | 'abbrev' | 'name' | 'pattern' | 'infix' | 'prefix' | 'postfix' )  SOMETHING*) 
				 ;
				 
				 

includeOps : ('%' 'open' SOMETHING*);

TempType : {namespaceDeclaration} | {signatureDeclaration} | fullURI = GID;

viewDeclaration: '%' 'view' WS+ viewID=GID WS* ':' WS* from=NAMESPACE WS*'->' WS* to=NAMESPACE WS* '=' WS* viewDefs=sigDefinitions WS* '.' WS;

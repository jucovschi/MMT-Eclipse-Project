/*
* generated by Xtext
*/
grammar InternalLF;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package info.kwarc.mmt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package info.kwarc.mmt.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import info.kwarc.mmt.services.LFGrammarAccess;

}

@parser::members {

 	private LFGrammarAccess grammarAccess;
 	
    public InternalLFParser(TokenStream input, LFGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected LFGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)(
    { 
        newCompositeNode(grammarAccess.getModelAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getConstructsModelConstructNOSPParserRuleCall_2_0_0_0()); 
	    }
		lv_constructs_2_1=rulemodelConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_2_1, 
        		"modelConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getConstructsTermDeclarationParserRuleCall_2_0_0_1()); 
	    }
		lv_constructs_2_2=ruletermDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_2_2, 
        		"termDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)

)
)((
    { 
        newCompositeNode(grammarAccess.getModelAccess().getWSParserRuleCall_2_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getConstructsModelConstructNOSPParserRuleCall_2_1_1_0_0()); 
	    }
		lv_constructs_4_0=rulemodelConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_4_0, 
        		"modelConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getModelAccess().getWSParserRuleCall_2_1_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getConstructsTermDeclarationParserRuleCall_2_1_1_1_1_0()); 
	    }
		lv_constructs_6_0=ruletermDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_6_0, 
        		"termDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))))*(
    { 
        newCompositeNode(grammarAccess.getModelAccess().getWSParserRuleCall_2_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?(this_PERCENT_8=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_8, grammarAccess.getModelAccess().getPERCENTTerminalRuleCall_3_0()); 
    }
this_DOT_9=RULE_DOT
    { 
    newLeafNode(this_DOT_9, grammarAccess.getModelAccess().getDOTTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getNotInDocumentAnyTerminalParserRuleCall_3_2_0()); 
	    }
		lv_notInDocument_10_0=ruleanyTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"notInDocument",
        		lv_notInDocument_10_0, 
        		"anyTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRulemodelConstructNOSP
entryRulemodelConstructNOSP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelConstructNOSPRule()); }
	 iv_rulemodelConstructNOSP=rulemodelConstructNOSP 
	 { $current=$iv_rulemodelConstructNOSP.current; } 
	 EOF 
;

// Rule modelConstructNOSP
rulemodelConstructNOSP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getNamespaceDeclarationsNamespaceDeclarationParserRuleCall_0_0()); 
	    }
		lv_namespaceDeclarations_0_0=rulenamespaceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"namespaceDeclarations",
        		lv_namespaceDeclarations_0_0, 
        		"namespaceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getReadDeclarationsReadDeclarationParserRuleCall_1_0()); 
	    }
		lv_readDeclarations_1_0=rulereadDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"readDeclarations",
        		lv_readDeclarations_1_0, 
        		"readDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getSigDeclarationsSigDeclarationParserRuleCall_2_0()); 
	    }
		lv_sigDeclarations_2_0=rulesigDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"sigDeclarations",
        		lv_sigDeclarations_2_0, 
        		"sigDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getViewDeclarationsViewDeclarationParserRuleCall_3_0()); 
	    }
		lv_viewDeclarations_3_0=ruleviewDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"viewDeclarations",
        		lv_viewDeclarations_3_0, 
        		"viewDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsAbbrevTermDeclarationParserRuleCall_4_0_0()); 
	    }
		lv_rawDeclarations_4_1=ruleabbrevTermDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"rawDeclarations",
        		lv_rawDeclarations_4_1, 
        		"abbrevTermDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsNameDeclarationParserRuleCall_4_0_1()); 
	    }
		lv_rawDeclarations_4_2=rulenameDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"rawDeclarations",
        		lv_rawDeclarations_4_2, 
        		"nameDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsFixityDeclarationParserRuleCall_4_0_2()); 
	    }
		lv_rawDeclarations_4_3=rulefixityDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"rawDeclarations",
        		lv_rawDeclarations_4_3, 
        		"fixityDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelConstructNOSPAccess().getRawDeclarationsUnknownConstructParserRuleCall_4_0_3()); 
	    }
		lv_rawDeclarations_4_4=ruleunknownConstruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelConstructNOSPRule());
	        }
       		add(
       			$current, 
       			"rawDeclarations",
        		lv_rawDeclarations_4_4, 
        		"unknownConstruct");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRuleanyTerminal
entryRuleanyTerminal returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyTerminalRule()); } 
	 iv_ruleanyTerminal=ruleanyTerminal 
	 { $current=$iv_ruleanyTerminal.current.getText(); }  
	 EOF 
;

// Rule anyTerminal
ruleanyTerminal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnyTerminalAccess().getAnyDirectiveParserRuleCall_0()); 
    }
    this_anyDirective_0=ruleanyDirective    {
		$current.merge(this_anyDirective_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnyTerminalAccess().getWSParserRuleCall_1()); 
    }
    this_WS_1=ruleWS    {
		$current.merge(this_WS_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_PERCENT_2=RULE_PERCENT    {
		$current.merge(this_PERCENT_2);
    }

    { 
    newLeafNode(this_PERCENT_2, grammarAccess.getAnyTerminalAccess().getPERCENTTerminalRuleCall_2()); 
    }

    |    this_COLON_3=RULE_COLON    {
		$current.merge(this_COLON_3);
    }

    { 
    newLeafNode(this_COLON_3, grammarAccess.getAnyTerminalAccess().getCOLONTerminalRuleCall_3()); 
    }

    |    this_QUOTE_4=RULE_QUOTE    {
		$current.merge(this_QUOTE_4);
    }

    { 
    newLeafNode(this_QUOTE_4, grammarAccess.getAnyTerminalAccess().getQUOTETerminalRuleCall_4()); 
    }

    |    this_LCBRACKET_5=RULE_LCBRACKET    {
		$current.merge(this_LCBRACKET_5);
    }

    { 
    newLeafNode(this_LCBRACKET_5, grammarAccess.getAnyTerminalAccess().getLCBRACKETTerminalRuleCall_5()); 
    }

    |    this_RCBRACKET_6=RULE_RCBRACKET    {
		$current.merge(this_RCBRACKET_6);
    }

    { 
    newLeafNode(this_RCBRACKET_6, grammarAccess.getAnyTerminalAccess().getRCBRACKETTerminalRuleCall_6()); 
    }

    |    this_LSBRACKET_7=RULE_LSBRACKET    {
		$current.merge(this_LSBRACKET_7);
    }

    { 
    newLeafNode(this_LSBRACKET_7, grammarAccess.getAnyTerminalAccess().getLSBRACKETTerminalRuleCall_7()); 
    }

    |    this_RSBRACKET_8=RULE_RSBRACKET    {
		$current.merge(this_RSBRACKET_8);
    }

    { 
    newLeafNode(this_RSBRACKET_8, grammarAccess.getAnyTerminalAccess().getRSBRACKETTerminalRuleCall_8()); 
    }

    |    this_LBRACKET_9=RULE_LBRACKET    {
		$current.merge(this_LBRACKET_9);
    }

    { 
    newLeafNode(this_LBRACKET_9, grammarAccess.getAnyTerminalAccess().getLBRACKETTerminalRuleCall_9()); 
    }

    |    this_RBRACKET_10=RULE_RBRACKET    {
		$current.merge(this_RBRACKET_10);
    }

    { 
    newLeafNode(this_RBRACKET_10, grammarAccess.getAnyTerminalAccess().getRBRACKETTerminalRuleCall_10()); 
    }

    |    this_DOT_11=RULE_DOT    {
		$current.merge(this_DOT_11);
    }

    { 
    newLeafNode(this_DOT_11, grammarAccess.getAnyTerminalAccess().getDOTTerminalRuleCall_11()); 
    }

    |    this_ARROW_12=RULE_ARROW    {
		$current.merge(this_ARROW_12);
    }

    { 
    newLeafNode(this_ARROW_12, grammarAccess.getAnyTerminalAccess().getARROWTerminalRuleCall_12()); 
    }

    |    this_LARROW_13=RULE_LARROW    {
		$current.merge(this_LARROW_13);
    }

    { 
    newLeafNode(this_LARROW_13, grammarAccess.getAnyTerminalAccess().getLARROWTerminalRuleCall_13()); 
    }

    |    this_EQUALS_14=RULE_EQUALS    {
		$current.merge(this_EQUALS_14);
    }

    { 
    newLeafNode(this_EQUALS_14, grammarAccess.getAnyTerminalAccess().getEQUALSTerminalRuleCall_14()); 
    }

    |    this_ASSIGN_15=RULE_ASSIGN    {
		$current.merge(this_ASSIGN_15);
    }

    { 
    newLeafNode(this_ASSIGN_15, grammarAccess.getAnyTerminalAccess().getASSIGNTerminalRuleCall_15()); 
    }

    |    this_TYPE_16=RULE_TYPE    {
		$current.merge(this_TYPE_16);
    }

    { 
    newLeafNode(this_TYPE_16, grammarAccess.getAnyTerminalAccess().getTYPETerminalRuleCall_16()); 
    }

    |    this_UNDERSCORE_17=RULE_UNDERSCORE    {
		$current.merge(this_UNDERSCORE_17);
    }

    { 
    newLeafNode(this_UNDERSCORE_17, grammarAccess.getAnyTerminalAccess().getUNDERSCORETerminalRuleCall_17()); 
    }

    |    this_CID_18=RULE_CID    {
		$current.merge(this_CID_18);
    }

    { 
    newLeafNode(this_CID_18, grammarAccess.getAnyTerminalAccess().getCIDTerminalRuleCall_18()); 
    }

    |    this_URISTRING_19=RULE_URISTRING    {
		$current.merge(this_URISTRING_19);
    }

    { 
    newLeafNode(this_URISTRING_19, grammarAccess.getAnyTerminalAccess().getURISTRINGTerminalRuleCall_19()); 
    }

    |    this_ILLEGAL_TOKEN_20=RULE_ILLEGAL_TOKEN    {
		$current.merge(this_ILLEGAL_TOKEN_20);
    }

    { 
    newLeafNode(this_ILLEGAL_TOKEN_20, grammarAccess.getAnyTerminalAccess().getILLEGAL_TOKENTerminalRuleCall_20()); 
    }
)
    ;





// Entry rule entryRuleWS
entryRuleWS returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getWSRule()); } 
	 iv_ruleWS=ruleWS 
	 { $current=$iv_ruleWS.current.getText(); }  
	 EOF 
;

// Rule WS
ruleWS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_LINESP_0=RULE_LINESP    {
		$current.merge(this_LINESP_0);
    }

    { 
    newLeafNode(this_LINESP_0, grammarAccess.getWSAccess().getLINESPTerminalRuleCall_0()); 
    }

    |    this_LINEDELIM_1=RULE_LINEDELIM    {
		$current.merge(this_LINEDELIM_1);
    }

    { 
    newLeafNode(this_LINEDELIM_1, grammarAccess.getWSAccess().getLINEDELIMTerminalRuleCall_1()); 
    }

    |    this_ML_COMMENT_2=RULE_ML_COMMENT    {
		$current.merge(this_ML_COMMENT_2);
    }

    { 
    newLeafNode(this_ML_COMMENT_2, grammarAccess.getWSAccess().getML_COMMENTTerminalRuleCall_2()); 
    }

    |    this_ML2_COMMENT_3=RULE_ML2_COMMENT    {
		$current.merge(this_ML2_COMMENT_3);
    }

    { 
    newLeafNode(this_ML2_COMMENT_3, grammarAccess.getWSAccess().getML2_COMMENTTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleID
entryRuleID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDRule()); } 
	 iv_ruleID=ruleID 
	 { $current=$iv_ruleID.current.getText(); }  
	 EOF 
;

// Rule ID
ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_CID_0=RULE_CID    {
		$current.merge(this_CID_0);
    }

    { 
    newLeafNode(this_CID_0, grammarAccess.getIDAccess().getCIDTerminalRuleCall_0()); 
    }
(    this_DOT_1=RULE_DOT    {
		$current.merge(this_DOT_1);
    }

    { 
    newLeafNode(this_DOT_1, grammarAccess.getIDAccess().getDOTTerminalRuleCall_1_0()); 
    }
    this_CID_2=RULE_CID    {
		$current.merge(this_CID_2);
    }

    { 
    newLeafNode(this_CID_2, grammarAccess.getIDAccess().getCIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleterm
entryRuleterm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleterm=ruleterm 
	 { $current=$iv_ruleterm.current; } 
	 EOF 
;

// Rule term
ruleterm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTermAccess().getTermArrParserRuleCall()); 
    }
    this_termArr_0=ruletermArr
    { 
        $current = $this_termArr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuletermPi
entryRuletermPi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermPiRule()); }
	 iv_ruletermPi=ruletermPi 
	 { $current=$iv_ruletermPi.current; } 
	 EOF 
;

// Rule termPi
ruletermPi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_LCBRACKET_0=RULE_LCBRACKET
    { 
    newLeafNode(this_LCBRACKET_0, grammarAccess.getTermPiAccess().getLCBRACKETTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermPiAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
(
		lv_name_2_1=RULE_CID
		{
			newLeafNode(lv_name_2_1, grammarAccess.getTermPiAccess().getNameCIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermPiRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"CID");
	    }

    |		lv_name_2_2=RULE_UNDERSCORE
		{
			newLeafNode(lv_name_2_2, grammarAccess.getTermPiAccess().getNameUNDERSCORETerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermPiRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"UNDERSCORE");
	    }

)

)
)(
    { 
        newCompositeNode(grammarAccess.getTermPiAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getTermPiAccess().getCOLONTerminalRuleCall_4_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermPiAccess().getWSParserRuleCall_4_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermPiAccess().getTypeTermParserRuleCall_4_2_0()); 
	    }
		lv_type_6_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermPiRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getTermPiAccess().getWSParserRuleCall_4_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?this_RCBRACKET_8=RULE_RCBRACKET
    { 
    newLeafNode(this_RCBRACKET_8, grammarAccess.getTermPiAccess().getRCBRACKETTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuletermLambda
entryRuletermLambda returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermLambdaRule()); }
	 iv_ruletermLambda=ruletermLambda 
	 { $current=$iv_ruletermLambda.current; } 
	 EOF 
;

// Rule termLambda
ruletermLambda returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_LSBRACKET_0=RULE_LSBRACKET
    { 
    newLeafNode(this_LSBRACKET_0, grammarAccess.getTermLambdaAccess().getLSBRACKETTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermLambdaAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
(
		lv_name_2_1=RULE_CID
		{
			newLeafNode(lv_name_2_1, grammarAccess.getTermLambdaAccess().getNameCIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermLambdaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"CID");
	    }

    |		lv_name_2_2=RULE_UNDERSCORE
		{
			newLeafNode(lv_name_2_2, grammarAccess.getTermLambdaAccess().getNameUNDERSCORETerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermLambdaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"UNDERSCORE");
	    }

)

)
)(
    { 
        newCompositeNode(grammarAccess.getTermLambdaAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getTermLambdaAccess().getCOLONTerminalRuleCall_4_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermLambdaAccess().getWSParserRuleCall_4_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermLambdaAccess().getTypeTermParserRuleCall_4_2_0()); 
	    }
		lv_type_6_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermLambdaRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getTermLambdaAccess().getWSParserRuleCall_4_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?this_RSBRACKET_8=RULE_RSBRACKET
    { 
    newLeafNode(this_RSBRACKET_8, grammarAccess.getTermLambdaAccess().getRSBRACKETTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuletermArr
entryRuletermArr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermArrRule()); }
	 iv_ruletermArr=ruletermArr 
	 { $current=$iv_ruletermArr.current; } 
	 EOF 
;

// Rule termArr
ruletermArr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTermArrAccess().getTermAppOrLambdaOrPiParserRuleCall_0()); 
    }
    this_termAppOrLambdaOrPi_0=ruletermAppOrLambdaOrPi
    { 
        $current = $this_termAppOrLambdaOrPi_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTermArrAccess().getTermLeftAction_1_0(),
            $current);
    }
)(
    { 
        newCompositeNode(grammarAccess.getTermArrAccess().getWSParserRuleCall_1_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(this_ARROW_3=RULE_ARROW
    { 
    newLeafNode(this_ARROW_3, grammarAccess.getTermArrAccess().getARROWTerminalRuleCall_1_2_0()); 
    }

    |this_LARROW_4=RULE_LARROW
    { 
    newLeafNode(this_LARROW_4, grammarAccess.getTermArrAccess().getLARROWTerminalRuleCall_1_2_1()); 
    }
)(
    { 
        newCompositeNode(grammarAccess.getTermArrAccess().getWSParserRuleCall_1_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getTermArrAccess().getRightTermArrParserRuleCall_1_4_0()); 
	    }
		lv_right_6_0=ruletermArr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermArrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_6_0, 
        		"termArr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuletermAppOrLambdaOrPi
entryRuletermAppOrLambdaOrPi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermAppOrLambdaOrPiRule()); }
	 iv_ruletermAppOrLambdaOrPi=ruletermAppOrLambdaOrPi 
	 { $current=$iv_ruletermAppOrLambdaOrPi.current; } 
	 EOF 
;

// Rule termAppOrLambdaOrPi
ruletermAppOrLambdaOrPi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTermAppOrLambdaOrPiAccess().getTermLambdaOrPiParserRuleCall_0()); 
    }
    this_termLambdaOrPi_0=ruletermLambdaOrPi
    { 
        $current = $this_termLambdaOrPi_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAppOrLambdaOrPiAccess().getLeftTermAppNoLambdaNoPiParserRuleCall_1_0_0()); 
	    }
		lv_left_1_0=ruletermAppNoLambdaNoPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAppOrLambdaOrPiRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_1_0, 
        		"termAppNoLambdaNoPi");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getTermAppOrLambdaOrPiAccess().getWSParserRuleCall_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAppOrLambdaOrPiAccess().getRightTermLambdaOrPiParserRuleCall_1_1_1_0()); 
	    }
		lv_right_3_0=ruletermLambdaOrPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAppOrLambdaOrPiRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"termLambdaOrPi");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuletermAppThenLambdaOrPi
entryRuletermAppThenLambdaOrPi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermAppThenLambdaOrPiRule()); }
	 iv_ruletermAppThenLambdaOrPi=ruletermAppThenLambdaOrPi 
	 { $current=$iv_ruletermAppThenLambdaOrPi.current; } 
	 EOF 
;

// Rule termAppThenLambdaOrPi
ruletermAppThenLambdaOrPi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAppThenLambdaOrPiAccess().getLeftTermAppNoLambdaNoPiParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruletermAppNoLambdaNoPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAppThenLambdaOrPiRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"termAppNoLambdaNoPi");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getTermAppThenLambdaOrPiAccess().getWSParserRuleCall_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAppThenLambdaOrPiAccess().getRightTermLambdaOrPiParserRuleCall_1_1_0()); 
	    }
		lv_right_2_0=ruletermLambdaOrPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAppThenLambdaOrPiRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"termLambdaOrPi");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuletermAppNoLambdaNoPi
entryRuletermAppNoLambdaNoPi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermAppNoLambdaNoPiRule()); }
	 iv_ruletermAppNoLambdaNoPi=ruletermAppNoLambdaNoPi 
	 { $current=$iv_ruletermAppNoLambdaNoPi.current; } 
	 EOF 
;

// Rule termAppNoLambdaNoPi
ruletermAppNoLambdaNoPi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTermAppNoLambdaNoPiAccess().getTermBaseParserRuleCall_0()); 
    }
    this_termBase_0=ruletermBase
    { 
        $current = $this_termBase_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTermAppNoLambdaNoPiAccess().getTermLeftAction_1_0(),
            $current);
    }
)(
    { 
        newCompositeNode(grammarAccess.getTermAppNoLambdaNoPiAccess().getWSParserRuleCall_1_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAppNoLambdaNoPiAccess().getRightTermBaseParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruletermBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAppNoLambdaNoPiRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"termBase");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuletermLambdaOrPi
entryRuletermLambdaOrPi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermLambdaOrPiRule()); }
	 iv_ruletermLambdaOrPi=ruletermLambdaOrPi 
	 { $current=$iv_ruletermLambdaOrPi.current; } 
	 EOF 
;

// Rule termLambdaOrPi
ruletermLambdaOrPi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermLambdaOrPiAccess().getQuantifiersTermPiParserRuleCall_0_0_0_0()); 
	    }
		lv_quantifiers_0_1=ruletermPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermLambdaOrPiRule());
	        }
       		add(
       			$current, 
       			"quantifiers",
        		lv_quantifiers_0_1, 
        		"termPi");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getTermLambdaOrPiAccess().getQuantifiersTermLambdaParserRuleCall_0_0_0_1()); 
	    }
		lv_quantifiers_0_2=ruletermLambda		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermLambdaOrPiRule());
	        }
       		add(
       			$current, 
       			"quantifiers",
        		lv_quantifiers_0_2, 
        		"termLambda");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
    { 
        newCompositeNode(grammarAccess.getTermLambdaOrPiAccess().getWSParserRuleCall_0_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)+(
(
		{ 
	        newCompositeNode(grammarAccess.getTermLambdaOrPiAccess().getRightTermAppThenLambdaOrPiParserRuleCall_1_0()); 
	    }
		lv_right_2_0=ruletermAppThenLambdaOrPi		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermLambdaOrPiRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"termAppThenLambdaOrPi");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuletermBase
entryRuletermBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermBaseRule()); }
	 iv_ruletermBase=ruletermBase 
	 { $current=$iv_ruletermBase.current; } 
	 EOF 
;

// Rule termBase
ruletermBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermBaseAccess().getTermTermAtomicParserRuleCall_0_0()); 
	    }
		lv_term_0_0=ruletermAtomic		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermBaseRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_0_0, 
        		"termAtomic");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermBaseAccess().getTermAction_1_0(),
            $current);
    }
)this_LBRACKET_2=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_2, grammarAccess.getTermBaseAccess().getLBRACKETTerminalRuleCall_1_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermBaseAccess().getWSParserRuleCall_1_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getTermBaseAccess().getTermTermParserRuleCall_1_3_0_0()); 
	    }
		lv_term_4_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermBaseRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_4_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getTermBaseAccess().getWSParserRuleCall_1_3_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getTermBaseAccess().getCOLONTerminalRuleCall_1_3_2_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermBaseAccess().getWSParserRuleCall_1_3_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermBaseAccess().getTypeTermParserRuleCall_1_3_2_2_0()); 
	    }
		lv_type_8_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermBaseRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getTermBaseAccess().getWSParserRuleCall_1_3_2_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?)?this_RBRACKET_10=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_10, grammarAccess.getTermBaseAccess().getRBRACKETTerminalRuleCall_1_4()); 
    }
))
;





// Entry rule entryRuletermAtomic
entryRuletermAtomic returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermAtomicRule()); }
	 iv_ruletermAtomic=ruletermAtomic 
	 { $current=$iv_ruletermAtomic.current; } 
	 EOF 
;

// Rule termAtomic
ruletermAtomic returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_atom_0_0=RULE_TYPE
		{
			newLeafNode(lv_atom_0_0, grammarAccess.getTermAtomicAccess().getAtomTYPETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"atom",
        		lv_atom_0_0, 
        		"TYPE");
	    }

)
)
    |(
(
		lv_atom_1_0=RULE_UNDERSCORE
		{
			newLeafNode(lv_atom_1_0, grammarAccess.getTermAtomicAccess().getAtomUNDERSCORETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermAtomicRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"atom",
        		lv_atom_1_0, 
        		"UNDERSCORE");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAtomicAccess().getAtomIDParserRuleCall_2_0()); 
	    }
		lv_atom_2_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermAtomicRule());
	        }
       		set(
       			$current, 
       			"atom",
        		lv_atom_2_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulemorphism
entryRulemorphism returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMorphismRule()); }
	 iv_rulemorphism=rulemorphism 
	 { $current=$iv_rulemorphism.current; } 
	 EOF 
;

// Rule morphism
rulemorphism returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMorphismRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMorphismAccess().getLinkRefsLinkDeclarationCrossReference_0_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getMorphismAccess().getWSParserRuleCall_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMorphismRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMorphismAccess().getLinkRefsLinkDeclarationCrossReference_1_1_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuletermDeclaration
entryRuletermDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermDeclarationRule()); }
	 iv_ruletermDeclaration=ruletermDeclaration 
	 { $current=$iv_ruletermDeclaration.current; } 
	 EOF 
;

// Rule termDeclaration
ruletermDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermDeclarationAccess().getNameIDParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1(), 0);
	 				}
					({true}?=>((
    { 
        newCompositeNode(grammarAccess.getTermDeclarationAccess().getWSParserRuleCall_1_0_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getTermDeclarationAccess().getCOLONTerminalRuleCall_1_0_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermDeclarationAccess().getWSParserRuleCall_1_0_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTermDeclarationAccess().getTypeTermParserRuleCall_1_0_3_0()); 
	    }
		lv_type_5_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1(), 1);
	 				}
					({true}?=>((
    { 
        newCompositeNode(grammarAccess.getTermDeclarationAccess().getWSParserRuleCall_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_7=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_7, grammarAccess.getTermDeclarationAccess().getEQUALSTerminalRuleCall_1_1_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTermDeclarationAccess().getWSParserRuleCall_1_1_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getTermDeclarationAccess().getDefTermParserRuleCall_1_1_3_0()); 
	    }
		lv_def_9_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_9_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTermDeclarationAccess().getUnorderedGroup_1());
	}

)(
    { 
        newCompositeNode(grammarAccess.getTermDeclarationAccess().getWSParserRuleCall_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_11=RULE_DOT
    { 
    newLeafNode(this_DOT_11, grammarAccess.getTermDeclarationAccess().getDOTTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleabbrevTermDeclaration
entryRuleabbrevTermDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbbrevTermDeclarationRule()); }
	 iv_ruleabbrevTermDeclaration=ruleabbrevTermDeclaration 
	 { $current=$iv_ruleabbrevTermDeclaration.current; } 
	 EOF 
;

// Rule abbrevTermDeclaration
ruleabbrevTermDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%abbrev' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAbbrevTermDeclarationAccess().getAbbrevKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getAbbrevTermDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+
    { 
        newCompositeNode(grammarAccess.getAbbrevTermDeclarationAccess().getTermDeclarationParserRuleCall_2()); 
    }
    this_termDeclaration_2=ruletermDeclaration
    { 
        $current = $this_termDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulenameDeclaration
entryRulenameDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameDeclarationRule()); }
	 iv_rulenameDeclaration=rulenameDeclaration 
	 { $current=$iv_rulenameDeclaration.current; } 
	 EOF 
;

// Rule nameDeclaration
rulenameDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNameDeclarationAccess().getNameKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getNameDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getNameDeclarationAccess().getNameIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNameDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		lv_alias_4_0=RULE_CID
		{
			newLeafNode(lv_alias_4_0, grammarAccess.getNameDeclarationAccess().getAliasCIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNameDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_4_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNameDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_6=RULE_DOT
    { 
    newLeafNode(this_DOT_6, grammarAccess.getNameDeclarationAccess().getDOTTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRulefixityDeclaration
entryRulefixityDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixityDeclarationRule()); }
	 iv_rulefixityDeclaration=rulefixityDeclaration 
	 { $current=$iv_rulefixityDeclaration.current; } 
	 EOF 
;

// Rule fixityDeclaration
rulefixityDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_fixity_0_0=RULE_INFIXNONE
		{
			newLeafNode(lv_fixity_0_0, grammarAccess.getFixityDeclarationAccess().getFixityINFIXNONETerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fixity",
        		lv_fixity_0_0, 
        		"INFIXNONE");
	    }

)
)
    |(
(
		lv_fixity_1_0=RULE_INFIXLEFT
		{
			newLeafNode(lv_fixity_1_0, grammarAccess.getFixityDeclarationAccess().getFixityINFIXLEFTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fixity",
        		lv_fixity_1_0, 
        		"INFIXLEFT");
	    }

)
)
    |(
(
		lv_fixity_2_0=RULE_INFIXRIGHT
		{
			newLeafNode(lv_fixity_2_0, grammarAccess.getFixityDeclarationAccess().getFixityINFIXRIGHTTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fixity",
        		lv_fixity_2_0, 
        		"INFIXRIGHT");
	    }

)
)
    |(
(
		lv_fixity_3_0=	'%prefix' 
    {
        newLeafNode(lv_fixity_3_0, grammarAccess.getFixityDeclarationAccess().getFixityPrefixKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed($current, "fixity", lv_fixity_3_0, "\%prefix");
	    }

)
)
    |(
(
		lv_fixity_4_0=	'%postfix' 
    {
        newLeafNode(lv_fixity_4_0, grammarAccess.getFixityDeclarationAccess().getFixityPostfixKeyword_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed($current, "fixity", lv_fixity_4_0, "\%postfix");
	    }

)
))(
    { 
        newCompositeNode(grammarAccess.getFixityDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		lv_fixityLevel_6_0=RULE_CID
		{
			newLeafNode(lv_fixityLevel_6_0, grammarAccess.getFixityDeclarationAccess().getFixityLevelCIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixityDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fixityLevel",
        		lv_fixityLevel_6_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getFixityDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getFixityDeclarationAccess().getNameIDParserRuleCall_4_0()); 
	    }
		lv_name_8_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixityDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_8_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getFixityDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_10=RULE_DOT
    { 
    newLeafNode(this_DOT_10, grammarAccess.getFixityDeclarationAccess().getDOTTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRulesigMetaDeclaration
entryRulesigMetaDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigMetaDeclarationRule()); }
	 iv_rulesigMetaDeclaration=rulesigMetaDeclaration 
	 { $current=$iv_rulesigMetaDeclaration.current; } 
	 EOF 
;

// Rule sigMetaDeclaration
rulesigMetaDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%meta' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSigMetaDeclarationAccess().getMetaKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigMetaDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigMetaDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSigMetaDeclarationAccess().getRefSigDeclarationCrossReference_2_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSigMetaDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getSigMetaDeclarationAccess().getDOTTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulesigIncludeDeclaration
entryRulesigIncludeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigIncludeDeclarationRule()); }
	 iv_rulesigIncludeDeclaration=rulesigIncludeDeclaration 
	 { $current=$iv_rulesigIncludeDeclaration.current; } 
	 EOF 
;

// Rule sigIncludeDeclaration
rulesigIncludeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSigIncludeDeclarationAccess().getIncludeKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigIncludeDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigIncludeDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSigIncludeDeclarationAccess().getRefSigDeclarationCrossReference_2_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getSigIncludeDeclarationAccess().getWSParserRuleCall_3_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSigIncludeDeclarationAccess().getIncOptIncludeOpsParserRuleCall_3_1_0()); 
	    }
		lv_incOpt_4_0=ruleincludeOps		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigIncludeDeclarationRule());
	        }
       		set(
       			$current, 
       			"incOpt",
        		lv_incOpt_4_0, 
        		"includeOps");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getSigIncludeDeclarationAccess().getWSParserRuleCall_4()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_6=RULE_DOT
    { 
    newLeafNode(this_DOT_6, grammarAccess.getSigIncludeDeclarationAccess().getDOTTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRulestructDeclaration
entryRulestructDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	 iv_rulestructDeclaration=rulestructDeclaration 
	 { $current=$iv_rulestructDeclaration.current; } 
	 EOF 
;

// Rule structDeclaration
rulestructDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructDeclarationAccess().getStructKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(	otherlv_2='%implicit' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructDeclarationAccess().getImplicitKeyword_2_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getNameIDParserRuleCall_3_0()); 
	    }
		lv_name_4_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_0_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getStructDeclarationAccess().getEQUALSTerminalRuleCall_4_0_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_0_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getDefMorphismParserRuleCall_4_0_3_0()); 
	    }
		lv_def_8_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_8_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_COLON_10=RULE_COLON
    { 
    newLeafNode(this_COLON_10, grammarAccess.getStructDeclarationAccess().getCOLONTerminalRuleCall_4_1_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_1_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getFromSigDeclarationCrossReference_4_1_3_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_1_4_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_14=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_14, grammarAccess.getStructDeclarationAccess().getEQUALSTerminalRuleCall_4_1_4_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_1_4_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getDefLinkBodyParserRuleCall_4_1_4_3_0_0()); 
	    }
		lv_def_16_0=rulelinkBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_16_0, 
        		"linkBody");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_4_1_4_3_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getDefMorphismParserRuleCall_4_1_4_3_1_1_0()); 
	    }
		lv_def_18_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_18_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
))))?))?((
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_5_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStructDeclarationAccess().getIncOptIncludeOpsParserRuleCall_5_1_0()); 
	    }
		lv_incOpt_20_0=ruleincludeOps		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
	        }
       		set(
       			$current, 
       			"incOpt",
        		lv_incOpt_20_0, 
        		"includeOps");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getStructDeclarationAccess().getWSParserRuleCall_6()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_22=RULE_DOT
    { 
    newLeafNode(this_DOT_22, grammarAccess.getStructDeclarationAccess().getDOTTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleincludeOps
entryRuleincludeOps returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeOpsRule()); }
	 iv_ruleincludeOps=ruleincludeOps 
	 { $current=$iv_ruleincludeOps.current; } 
	 EOF 
;

// Rule includeOps
ruleincludeOps returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIncludeOpsAccess().getIncludeOpsAction_0(),
            $current);
    }
)	otherlv_1='%open' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIncludeOpsAccess().getOpenKeyword_1());
    }
((
    { 
        newCompositeNode(grammarAccess.getIncludeOpsAccess().getWSParserRuleCall_2_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludeOpsAccess().getAliasesAliasDeclarationParserRuleCall_2_1_0()); 
	    }
		lv_aliases_3_0=rulealiasDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludeOpsRule());
	        }
       		add(
       			$current, 
       			"aliases",
        		lv_aliases_3_0, 
        		"aliasDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulealiasDeclaration
entryRulealiasDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliasDeclarationRule()); }
	 iv_rulealiasDeclaration=rulealiasDeclaration 
	 { $current=$iv_rulealiasDeclaration.current; } 
	 EOF 
;

// Rule aliasDeclaration
rulealiasDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAliasDeclarationAccess().getOldIDParserRuleCall_0_0()); 
	    }
		lv_old_0_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasDeclarationRule());
	        }
       		set(
       			$current, 
       			"old",
        		lv_old_0_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	ruleWS)=>
    { 
        newCompositeNode(grammarAccess.getAliasDeclarationAccess().getWSParserRuleCall_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_2='%as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAliasDeclarationAccess().getAsKeyword_1_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getAliasDeclarationAccess().getWSParserRuleCall_1_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		lv_new_4_0=RULE_CID
		{
			newLeafNode(lv_new_4_0, grammarAccess.getAliasDeclarationAccess().getNewCIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"new",
        		lv_new_4_0, 
        		"CID");
	    }

)
))?)
;





// Entry rule entryRuleconstantAssignment
entryRuleconstantAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantAssignmentRule()); }
	 iv_ruleconstantAssignment=ruleconstantAssignment 
	 { $current=$iv_ruleconstantAssignment.current; } 
	 EOF 
;

// Rule constantAssignment
ruleconstantAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstantAssignmentAccess().getNameIDParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantAssignmentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getConstantAssignmentAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_ASSIGN_2=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_2, grammarAccess.getConstantAssignmentAccess().getASSIGNTerminalRuleCall_2()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getConstantAssignmentAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantAssignmentAccess().getDefTermParserRuleCall_4_0()); 
	    }
		lv_def_4_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantAssignmentRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_4_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getConstantAssignmentAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_6=RULE_DOT
    { 
    newLeafNode(this_DOT_6, grammarAccess.getConstantAssignmentAccess().getDOTTerminalRuleCall_6()); 
    }
)
;





// Entry rule entryRulestructAssignment
entryRulestructAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructAssignmentRule()); }
	 iv_rulestructAssignment=rulestructAssignment 
	 { $current=$iv_rulestructAssignment.current; } 
	 EOF 
;

// Rule structAssignment
rulestructAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructAssignmentAccess().getStructKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getStructAssignmentAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getStructAssignmentAccess().getNameIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructAssignmentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getStructAssignmentAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_ASSIGN_4=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_4, grammarAccess.getStructAssignmentAccess().getASSIGNTerminalRuleCall_4()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getStructAssignmentAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getStructAssignmentAccess().getDefMorphismParserRuleCall_6_0()); 
	    }
		lv_def_6_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructAssignmentRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_6_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getStructAssignmentAccess().getWSParserRuleCall_7()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_8=RULE_DOT
    { 
    newLeafNode(this_DOT_8, grammarAccess.getStructAssignmentAccess().getDOTTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleviewMetaDeclaration
entryRuleviewMetaDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewMetaDeclarationRule()); }
	 iv_ruleviewMetaDeclaration=ruleviewMetaDeclaration 
	 { $current=$iv_ruleviewMetaDeclaration.current; } 
	 EOF 
;

// Rule viewMetaDeclaration
ruleviewMetaDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%meta' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewMetaDeclarationAccess().getMetaKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewMetaDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getViewMetaDeclarationAccess().getDefMorphismParserRuleCall_2_0()); 
	    }
		lv_def_2_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewMetaDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_2_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewMetaDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getViewMetaDeclarationAccess().getDOTTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleviewIncludeDeclaration
entryRuleviewIncludeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewIncludeDeclarationRule()); }
	 iv_ruleviewIncludeDeclaration=ruleviewIncludeDeclaration 
	 { $current=$iv_ruleviewIncludeDeclaration.current; } 
	 EOF 
;

// Rule viewIncludeDeclaration
ruleviewIncludeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewIncludeDeclarationAccess().getIncludeKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewIncludeDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getViewIncludeDeclarationAccess().getDefMorphismParserRuleCall_2_0()); 
	    }
		lv_def_2_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewIncludeDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_2_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewIncludeDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getViewIncludeDeclarationAccess().getDOTTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleanyDirective
entryRuleanyDirective returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyDirectiveRule()); } 
	 iv_ruleanyDirective=ruleanyDirective 
	 { $current=$iv_ruleanyDirective.current.getText(); }  
	 EOF 
;

// Rule anyDirective
ruleanyDirective returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_UNKNOWNDIRECTIVE_0=RULE_UNKNOWNDIRECTIVE    {
		$current.merge(this_UNKNOWNDIRECTIVE_0);
    }

    { 
    newLeafNode(this_UNKNOWNDIRECTIVE_0, grammarAccess.getAnyDirectiveAccess().getUNKNOWNDIRECTIVETerminalRuleCall_0()); 
    }

    |
	kw='%struct' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getStructKeyword_1()); 
    }

    |
	kw='%meta' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getMetaKeyword_2()); 
    }

    |
	kw='%include' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getIncludeKeyword_3()); 
    }

    |
	kw='%namespace' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getNamespaceKeyword_4()); 
    }

    |
	kw='%read' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getReadKeyword_5()); 
    }

    |
	kw='%sig' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getSigKeyword_6()); 
    }

    |
	kw='%view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getViewKeyword_7()); 
    }

    |
	kw='%implicit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getImplicitKeyword_8()); 
    }

    |
	kw='%open' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getOpenKeyword_9()); 
    }

    |
	kw='%as' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getAsKeyword_10()); 
    }

    |
	kw='%abbrev' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getAbbrevKeyword_11()); 
    }

    |
	kw='%name' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getNameKeyword_12()); 
    }

    |    this_INFIXNONE_13=RULE_INFIXNONE    {
		$current.merge(this_INFIXNONE_13);
    }

    { 
    newLeafNode(this_INFIXNONE_13, grammarAccess.getAnyDirectiveAccess().getINFIXNONETerminalRuleCall_13()); 
    }

    |    this_INFIXLEFT_14=RULE_INFIXLEFT    {
		$current.merge(this_INFIXLEFT_14);
    }

    { 
    newLeafNode(this_INFIXLEFT_14, grammarAccess.getAnyDirectiveAccess().getINFIXLEFTTerminalRuleCall_14()); 
    }

    |    this_INFIXRIGHT_15=RULE_INFIXRIGHT    {
		$current.merge(this_INFIXRIGHT_15);
    }

    { 
    newLeafNode(this_INFIXRIGHT_15, grammarAccess.getAnyDirectiveAccess().getINFIXRIGHTTerminalRuleCall_15()); 
    }

    |
	kw='%prefix' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getPrefixKeyword_16()); 
    }

    |
	kw='%postfix' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnyDirectiveAccess().getPostfixKeyword_17()); 
    }
)
    ;





// Entry rule entryRuleunknownBrackets
entryRuleunknownBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnknownBracketsRule()); }
	 iv_ruleunknownBrackets=ruleunknownBrackets 
	 { $current=$iv_ruleunknownBrackets.current; } 
	 EOF 
;

// Rule unknownBrackets
ruleunknownBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnknownBracketsAccess().getUnknownBracketsAction_0(),
            $current);
    }
)this_LCBRACKET_1=RULE_LCBRACKET
    { 
    newLeafNode(this_LCBRACKET_1, grammarAccess.getUnknownBracketsAccess().getLCBRACKETTerminalRuleCall_1()); 
    }
((
    { 
        newCompositeNode(grammarAccess.getUnknownBracketsAccess().getWSParserRuleCall_2_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBracketsAccess().getTAnyConstructParserRuleCall_2_1_0()); 
	    }
		lv_t_3_0=ruleanyConstruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBracketsRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_3_0, 
        		"anyConstruct");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
    { 
        newCompositeNode(grammarAccess.getUnknownBracketsAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_RCBRACKET_5=RULE_RCBRACKET
    { 
    newLeafNode(this_RCBRACKET_5, grammarAccess.getUnknownBracketsAccess().getRCBRACKETTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleanyConstruct
entryRuleanyConstruct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyConstructRule()); }
	 iv_ruleanyConstruct=ruleanyConstruct 
	 { $current=$iv_ruleanyConstruct.current; } 
	 EOF 
;

// Rule anyConstruct
ruleanyConstruct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAnyConstructAccess().getTUnknownBodyParserRuleCall_0_0_0()); 
	    }
		lv_t_0_0=ruleunknownBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyConstructRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_0_0, 
        		"unknownBody");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAnyConstructAccess().getDirectiveAnyDirectiveParserRuleCall_0_1_0_0()); 
	    }
		lv_directive_1_0=ruleanyDirective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyConstructRule());
	        }
       		set(
       			$current, 
       			"directive",
        		lv_directive_1_0, 
        		"anyDirective");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getAnyConstructAccess().getWSParserRuleCall_0_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getAnyConstructAccess().getTUnknownBodyParserRuleCall_0_1_1_1_0()); 
	    }
		lv_t_3_0=ruleunknownBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnyConstructRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_3_0, 
        		"unknownBody");
	        afterParserOrEnumRuleCall();
	    }

)
))?))(
    { 
        newCompositeNode(grammarAccess.getAnyConstructAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_5=RULE_DOT
    { 
    newLeafNode(this_DOT_5, grammarAccess.getAnyConstructAccess().getDOTTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleunknownBody
entryRuleunknownBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnknownBodyRule()); }
	 iv_ruleunknownBody=ruleunknownBody 
	 { $current=$iv_ruleunknownBody.current; } 
	 EOF 
;

// Rule unknownBody
ruleunknownBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTTermParserRuleCall_0_0()); 
	    }
		lv_t_0_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_0_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getWSParserRuleCall_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getWSParserRuleCall_1_1_0_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
this_EQUALS_3=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_3, grammarAccess.getUnknownBodyAccess().getEQUALSTerminalRuleCall_1_1_0_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTUnknownBracketsParserRuleCall_1_1_0_2_0_0()); 
	    }
		lv_t_4_0=ruleunknownBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_4_0, 
        		"unknownBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getWSParserRuleCall_1_1_0_2_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(((
(
ruleterm
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTTermParserRuleCall_1_1_0_2_1_1_0_0()); 
	    }
		lv_t_6_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_6_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTUnknownBracketsParserRuleCall_1_1_0_2_1_1_1_0()); 
	    }
		lv_t_7_0=ruleunknownBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_7_0, 
        		"unknownBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)))))
    |(this_ASSIGN_8=RULE_ASSIGN
    { 
    newLeafNode(this_ASSIGN_8, grammarAccess.getUnknownBodyAccess().getASSIGNTerminalRuleCall_1_1_1_0()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTUnknownBracketsParserRuleCall_1_1_1_1_0_0()); 
	    }
		lv_t_9_0=ruleunknownBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_9_0, 
        		"unknownBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getWSParserRuleCall_1_1_1_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(((
(
ruleterm
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTTermParserRuleCall_1_1_1_1_1_1_0_0()); 
	    }
		lv_t_11_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_11_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTUnknownBracketsParserRuleCall_1_1_1_1_1_1_1_0()); 
	    }
		lv_t_12_0=ruleunknownBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_12_0, 
        		"unknownBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)))))
    |(this_COLON_13=RULE_COLON
    { 
    newLeafNode(this_COLON_13, grammarAccess.getUnknownBodyAccess().getCOLONTerminalRuleCall_1_1_2_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getWSParserRuleCall_1_1_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(((
(
ruleterm
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTTermParserRuleCall_1_1_2_2_0_0()); 
	    }
		lv_t_15_0=ruleterm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_15_0, 
        		"term");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownBodyAccess().getTUnknownBracketsParserRuleCall_1_1_2_2_1_0()); 
	    }
		lv_t_16_0=ruleunknownBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownBodyRule());
	        }
       		add(
       			$current, 
       			"t",
        		lv_t_16_0, 
        		"unknownBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |
    { 
        newCompositeNode(grammarAccess.getUnknownBodyAccess().getAnyDirectiveParserRuleCall_1_1_3()); 
    }
ruleanyDirective
    { 
        afterParserOrEnumRuleCall();
    }
))*)
;





// Entry rule entryRuleunknownConstruct
entryRuleunknownConstruct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnknownConstructRule()); }
	 iv_ruleunknownConstruct=ruleunknownConstruct 
	 { $current=$iv_ruleunknownConstruct.current; } 
	 EOF 
;

// Rule unknownConstruct
ruleunknownConstruct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_directive_0_0=RULE_UNKNOWNDIRECTIVE
		{
			newLeafNode(lv_directive_0_0, grammarAccess.getUnknownConstructAccess().getDirectiveUNKNOWNDIRECTIVETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnknownConstructRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"directive",
        		lv_directive_0_0, 
        		"UNKNOWNDIRECTIVE");
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getUnknownConstructAccess().getWSParserRuleCall_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getUnknownConstructAccess().getTUnknownBodyParserRuleCall_1_1_0()); 
	    }
		lv_t_2_0=ruleunknownBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnknownConstructRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_2_0, 
        		"unknownBody");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getUnknownConstructAccess().getWSParserRuleCall_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getUnknownConstructAccess().getDOTTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRulenamespaceDeclaration
entryRulenamespaceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceDeclarationRule()); }
	 iv_rulenamespaceDeclaration=rulenamespaceDeclaration 
	 { $current=$iv_rulenamespaceDeclaration.current; } 
	 EOF 
;

// Rule namespaceDeclaration
rulenamespaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%namespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+((
(
		lv_name_2_0=RULE_CID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNamespaceDeclarationAccess().getNameCIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_4=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_4, grammarAccess.getNamespaceDeclarationAccess().getEQUALSTerminalRuleCall_2_2()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_2_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?(
(
		lv_uri_6_0=RULE_URISTRING
		{
			newLeafNode(lv_uri_6_0, grammarAccess.getNamespaceDeclarationAccess().getUriURISTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uri",
        		lv_uri_6_0, 
        		"URISTRING");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_4()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_8=RULE_DOT
    { 
    newLeafNode(this_DOT_8, grammarAccess.getNamespaceDeclarationAccess().getDOTTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRulereadDeclaration
entryRulereadDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReadDeclarationRule()); }
	 iv_rulereadDeclaration=rulereadDeclaration 
	 { $current=$iv_rulereadDeclaration.current; } 
	 EOF 
;

// Rule readDeclaration
rulereadDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%read' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReadDeclarationAccess().getReadKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getReadDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		lv_file_2_0=RULE_URISTRING
		{
			newLeafNode(lv_file_2_0, grammarAccess.getReadDeclarationAccess().getFileURISTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"file",
        		lv_file_2_0, 
        		"URISTRING");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getReadDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_4=RULE_DOT
    { 
    newLeafNode(this_DOT_4, grammarAccess.getReadDeclarationAccess().getDOTTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulesigConstructNOSP
entryRulesigConstructNOSP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigConstructNOSPRule()); }
	 iv_rulesigConstructNOSP=rulesigConstructNOSP 
	 { $current=$iv_rulesigConstructNOSP.current; } 
	 EOF 
;

// Rule sigConstructNOSP
rulesigConstructNOSP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getAbbrevTermDeclarationParserRuleCall_0()); 
    }
    this_abbrevTermDeclaration_0=ruleabbrevTermDeclaration
    { 
        $current = $this_abbrevTermDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getNameDeclarationParserRuleCall_1()); 
    }
    this_nameDeclaration_1=rulenameDeclaration
    { 
        $current = $this_nameDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getFixityDeclarationParserRuleCall_2()); 
    }
    this_fixityDeclaration_2=rulefixityDeclaration
    { 
        $current = $this_fixityDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getUnknownConstructParserRuleCall_3()); 
    }
    this_unknownConstruct_3=ruleunknownConstruct
    { 
        $current = $this_unknownConstruct_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getSigMetaDeclarationParserRuleCall_4()); 
    }
    this_sigMetaDeclaration_4=rulesigMetaDeclaration
    { 
        $current = $this_sigMetaDeclaration_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getSigIncludeDeclarationParserRuleCall_5()); 
    }
    this_sigIncludeDeclaration_5=rulesigIncludeDeclaration
    { 
        $current = $this_sigIncludeDeclaration_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getStructDeclarationParserRuleCall_6()); 
    }
    this_structDeclaration_6=rulestructDeclaration
    { 
        $current = $this_structDeclaration_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getSigDeclarationParserRuleCall_7()); 
    }
    this_sigDeclaration_7=rulesigDeclaration
    { 
        $current = $this_sigDeclaration_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSigConstructNOSPAccess().getInternalViewDeclarationParserRuleCall_8()); 
    }
    this_internalViewDeclaration_8=ruleinternalViewDeclaration
    { 
        $current = $this_internalViewDeclaration_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRulesigBody
entryRulesigBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigBodyRule()); }
	 iv_rulesigBody=rulesigBody 
	 { $current=$iv_rulesigBody.current; } 
	 EOF 
;

// Rule sigBody
rulesigBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSigBodyAccess().getSigBodyAction_0(),
            $current);
    }
)this_LCBRACKET_1=RULE_LCBRACKET
    { 
    newLeafNode(this_LCBRACKET_1, grammarAccess.getSigBodyAccess().getLCBRACKETTerminalRuleCall_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getSigBodyAccess().getWSParserRuleCall_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigBodyAccess().getConstructsSigConstructNOSPParserRuleCall_3_0_0_0()); 
	    }
		lv_constructs_3_1=rulesigConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_3_1, 
        		"sigConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSigBodyAccess().getConstructsTermDeclarationParserRuleCall_3_0_0_1()); 
	    }
		lv_constructs_3_2=ruletermDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_3_2, 
        		"termDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)

)
)((
    { 
        newCompositeNode(grammarAccess.getSigBodyAccess().getWSParserRuleCall_3_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getSigBodyAccess().getConstructsSigConstructNOSPParserRuleCall_3_1_1_0_0()); 
	    }
		lv_constructs_5_0=rulesigConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_5_0, 
        		"sigConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getSigBodyAccess().getWSParserRuleCall_3_1_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigBodyAccess().getConstructsTermDeclarationParserRuleCall_3_1_1_1_1_0()); 
	    }
		lv_constructs_7_0=ruletermDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_7_0, 
        		"termDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))))*(
    { 
        newCompositeNode(grammarAccess.getSigBodyAccess().getWSParserRuleCall_3_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?this_RCBRACKET_9=RULE_RCBRACKET
    { 
    newLeafNode(this_RCBRACKET_9, grammarAccess.getSigBodyAccess().getRCBRACKETTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulesigDeclaration
entryRulesigDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigDeclarationRule()); }
	 iv_rulesigDeclaration=rulesigDeclaration 
	 { $current=$iv_rulesigDeclaration.current; } 
	 EOF 
;

// Rule sigDeclaration
rulesigDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%sig' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSigDeclarationAccess().getSigKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		lv_name_2_0=RULE_CID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSigDeclarationAccess().getNameCIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSigDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_4=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_4, grammarAccess.getSigDeclarationAccess().getEQUALSTerminalRuleCall_4()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getSigDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSigDeclarationAccess().getDefSigBodyParserRuleCall_6_0()); 
	    }
		lv_def_6_0=rulesigBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_6_0, 
        		"sigBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSigDeclarationAccess().getWSParserRuleCall_7()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_8=RULE_DOT
    { 
    newLeafNode(this_DOT_8, grammarAccess.getSigDeclarationAccess().getDOTTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRulelinkConstructNOSP
entryRulelinkConstructNOSP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkConstructNOSPRule()); }
	 iv_rulelinkConstructNOSP=rulelinkConstructNOSP 
	 { $current=$iv_rulelinkConstructNOSP.current; } 
	 EOF 
;

// Rule linkConstructNOSP
rulelinkConstructNOSP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLinkConstructNOSPAccess().getStructAssignmentParserRuleCall_0()); 
    }
    this_structAssignment_0=rulestructAssignment
    { 
        $current = $this_structAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkConstructNOSPAccess().getViewMetaDeclarationParserRuleCall_1()); 
    }
    this_viewMetaDeclaration_1=ruleviewMetaDeclaration
    { 
        $current = $this_viewMetaDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkConstructNOSPAccess().getViewIncludeDeclarationParserRuleCall_2()); 
    }
    this_viewIncludeDeclaration_2=ruleviewIncludeDeclaration
    { 
        $current = $this_viewIncludeDeclaration_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLinkConstructNOSPAccess().getUnknownConstructParserRuleCall_3()); 
    }
    this_unknownConstruct_3=ruleunknownConstruct
    { 
        $current = $this_unknownConstruct_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRulelinkBody
entryRulelinkBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkBodyRule()); }
	 iv_rulelinkBody=rulelinkBody 
	 { $current=$iv_rulelinkBody.current; } 
	 EOF 
;

// Rule linkBody
rulelinkBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLinkBodyAccess().getLinkBodyAction_0(),
            $current);
    }
)this_LCBRACKET_1=RULE_LCBRACKET
    { 
    newLeafNode(this_LCBRACKET_1, grammarAccess.getLinkBodyAccess().getLCBRACKETTerminalRuleCall_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getLinkBodyAccess().getWSParserRuleCall_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkBodyAccess().getConstructsLinkConstructNOSPParserRuleCall_3_0_0_0()); 
	    }
		lv_constructs_3_1=rulelinkConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_3_1, 
        		"linkConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getLinkBodyAccess().getConstructsConstantAssignmentParserRuleCall_3_0_0_1()); 
	    }
		lv_constructs_3_2=ruleconstantAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_3_2, 
        		"constantAssignment");
	        afterParserOrEnumRuleCall();
	    }

)

)
)((
    { 
        newCompositeNode(grammarAccess.getLinkBodyAccess().getWSParserRuleCall_3_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getLinkBodyAccess().getConstructsLinkConstructNOSPParserRuleCall_3_1_1_0_0()); 
	    }
		lv_constructs_5_0=rulelinkConstructNOSP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_5_0, 
        		"linkConstructNOSP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getLinkBodyAccess().getWSParserRuleCall_3_1_1_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkBodyAccess().getConstructsConstantAssignmentParserRuleCall_3_1_1_1_1_0()); 
	    }
		lv_constructs_7_0=ruleconstantAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBodyRule());
	        }
       		add(
       			$current, 
       			"constructs",
        		lv_constructs_7_0, 
        		"constantAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))))*(
    { 
        newCompositeNode(grammarAccess.getLinkBodyAccess().getWSParserRuleCall_3_2()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?this_RCBRACKET_9=RULE_RCBRACKET
    { 
    newLeafNode(this_RCBRACKET_9, grammarAccess.getLinkBodyAccess().getRCBRACKETTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRuleviewDeclaration
entryRuleviewDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewDeclarationRule()); }
	 iv_ruleviewDeclaration=ruleviewDeclaration 
	 { $current=$iv_ruleviewDeclaration.current; } 
	 EOF 
;

// Rule viewDeclaration
ruleviewDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%view' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewDeclarationAccess().getViewKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(	otherlv_2='%implicit' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getViewDeclarationAccess().getImplicitKeyword_2_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+)?(
(
		lv_name_4_0=RULE_CID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getViewDeclarationAccess().getNameCIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_4()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getViewDeclarationAccess().getCOLONTerminalRuleCall_5()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_6()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getFromSigDeclarationCrossReference_7_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_8()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_ARROW_10=RULE_ARROW
    { 
    newLeafNode(this_ARROW_10, grammarAccess.getViewDeclarationAccess().getARROWTerminalRuleCall_9()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_10()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getToMorphismParserRuleCall_11_0()); 
	    }
		lv_to_12_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_12_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_12()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_EQUALS_14=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_14, grammarAccess.getViewDeclarationAccess().getEQUALSTerminalRuleCall_13()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_14()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getDefLinkBodyParserRuleCall_15_0_0()); 
	    }
		lv_def_16_0=rulelinkBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_16_0, 
        		"linkBody");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_15_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getDefMorphismParserRuleCall_15_1_1_0()); 
	    }
		lv_def_18_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_18_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_16()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_20=RULE_DOT
    { 
    newLeafNode(this_DOT_20, grammarAccess.getViewDeclarationAccess().getDOTTerminalRuleCall_17()); 
    }
)
;





// Entry rule entryRuleinternalViewDeclaration
entryRuleinternalViewDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInternalViewDeclarationRule()); }
	 iv_ruleinternalViewDeclaration=ruleinternalViewDeclaration 
	 { $current=$iv_ruleinternalViewDeclaration.current; } 
	 EOF 
;

// Rule internalViewDeclaration
ruleinternalViewDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%view' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInternalViewDeclarationAccess().getViewKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(	otherlv_2='%implicit' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInternalViewDeclarationAccess().getImplicitKeyword_2_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+)?(
(
		lv_name_4_0=RULE_CID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getInternalViewDeclarationAccess().getNameCIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInternalViewDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_4()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getInternalViewDeclarationAccess().getCOLONTerminalRuleCall_5()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_6()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInternalViewDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getFromSigDeclarationCrossReference_7_0()); 
	    }
		ruleID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_8()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+this_ARROW_10=RULE_ARROW
    { 
    newLeafNode(this_ARROW_10, grammarAccess.getInternalViewDeclarationAccess().getARROWTerminalRuleCall_9()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_10()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+((
(
		{ 
	        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getToMorphismParserRuleCall_11_0_0()); 
	    }
		lv_to_12_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_12_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_11_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+)?this_EQUALS_14=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_14, grammarAccess.getInternalViewDeclarationAccess().getEQUALSTerminalRuleCall_12()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_13()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getDefLinkBodyParserRuleCall_14_0_0()); 
	    }
		lv_def_16_0=rulelinkBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_16_0, 
        		"linkBody");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_14_1_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getDefMorphismParserRuleCall_14_1_1_0()); 
	    }
		lv_def_18_0=rulemorphism		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInternalViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"def",
        		lv_def_18_0, 
        		"morphism");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
    { 
        newCompositeNode(grammarAccess.getInternalViewDeclarationAccess().getWSParserRuleCall_15()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*this_DOT_20=RULE_DOT
    { 
    newLeafNode(this_DOT_20, grammarAccess.getInternalViewDeclarationAccess().getDOTTerminalRuleCall_16()); 
    }
)
;









RULE_ML_COMMENT : '%{' ( options {greedy=false;} : . )*'}%';

RULE_ML2_COMMENT : '%*' ( options {greedy=false;} : . )*'*%';

RULE_LINE_COMMENT : RULE_PERCENT ((RULE_LINESP|RULE_PERCENT) ~(('\r'|'\n'))*)? '\r'? '\n';

RULE_PERCENT : '%';

RULE_COLON : ':';

RULE_QUOTE : '"';

RULE_LCBRACKET : '{';

RULE_RCBRACKET : '}';

RULE_LSBRACKET : '[';

RULE_RSBRACKET : ']';

RULE_LBRACKET : '(';

RULE_RBRACKET : ')';

RULE_DOT : '.';

RULE_LINESP : (' '|'\t');

RULE_LINEDELIM : '\r'? '\n';

RULE_ARROW : '->';

RULE_LARROW : '<-';

RULE_EQUALS : '=';

RULE_ASSIGN : ':=';

RULE_TYPE : 'type';

RULE_UNDERSCORE : '_';

RULE_CID : ~((RULE_LINESP|'\r'|'\n'|RULE_DOT|RULE_COLON|RULE_LBRACKET|RULE_RBRACKET|RULE_LSBRACKET|RULE_RSBRACKET|RULE_LCBRACKET|RULE_RCBRACKET|RULE_PERCENT|RULE_QUOTE))+;

RULE_UNKNOWNDIRECTIVE : '%' ('a'..'z'|'A'..'Z'|'0'..'9')+;

RULE_URISTRING : RULE_QUOTE ( options {greedy=false;} : . )*RULE_QUOTE;

RULE_INFIXNONE : '%infix' RULE_LINESP+ 'none';

RULE_INFIXLEFT : '%infix' RULE_LINESP+ 'left';

RULE_INFIXRIGHT : '%infix' RULE_LINESP+ 'right';

RULE_ILLEGAL_TOKEN : .;



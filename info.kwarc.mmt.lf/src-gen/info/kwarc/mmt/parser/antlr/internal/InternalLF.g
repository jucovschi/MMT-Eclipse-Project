/*
* generated by Xtext
*/
grammar InternalLF;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package info.kwarc.mmt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package info.kwarc.mmt.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import info.kwarc.mmt.services.LFGrammarAccess;

}

@parser::members {

 	private LFGrammarAccess grammarAccess;
 	
    public InternalLFParser(TokenStream input, LFGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected LFGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsNamespaceDeclarationParserRuleCall_0_0()); 
	    }
		lv_declarations_0_1=rulenamespaceDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_1, 
        		"namespaceDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsSignatureDeclarationParserRuleCall_0_1()); 
	    }
		lv_declarations_0_2=rulesignatureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_2, 
        		"signatureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsViewDeclarationParserRuleCall_0_2()); 
	    }
		lv_declarations_0_3=ruleviewDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_3, 
        		"viewDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsReadDeclarationParserRuleCall_0_3()); 
	    }
		lv_declarations_0_4=rulereadDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_4, 
        		"readDeclaration");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDeclarationsJUSTSPACEParserRuleCall_0_4()); 
	    }
		lv_declarations_0_5=ruleJUSTSPACE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_5, 
        		"JUSTSPACE");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*
;





// Entry rule entryRuleWS
entryRuleWS returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getWSRule()); } 
	 iv_ruleWS=ruleWS 
	 { $current=$iv_ruleWS.current.getText(); }  
	 EOF 
;

// Rule WS
ruleWS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SP_0=RULE_SP    {
		$current.merge(this_SP_0);
    }

    { 
    newLeafNode(this_SP_0, grammarAccess.getWSAccess().getSPTerminalRuleCall_0()); 
    }

    |    this_ML_COMMENT_1=RULE_ML_COMMENT    {
		$current.merge(this_ML_COMMENT_1);
    }

    { 
    newLeafNode(this_ML_COMMENT_1, grammarAccess.getWSAccess().getML_COMMENTTerminalRuleCall_1()); 
    }

    |    this_ML2_COMMENT_2=RULE_ML2_COMMENT    {
		$current.merge(this_ML2_COMMENT_2);
    }

    { 
    newLeafNode(this_ML2_COMMENT_2, grammarAccess.getWSAccess().getML2_COMMENTTerminalRuleCall_2()); 
    }

    |    this_SL_COMMENT_3=RULE_SL_COMMENT    {
		$current.merge(this_SL_COMMENT_3);
    }

    { 
    newLeafNode(this_SL_COMMENT_3, grammarAccess.getWSAccess().getSL_COMMENTTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleNAMESPACE
entryRuleNAMESPACE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNAMESPACERule()); } 
	 iv_ruleNAMESPACE=ruleNAMESPACE 
	 { $current=$iv_ruleNAMESPACE.current.getText(); }  
	 EOF 
;

// Rule NAMESPACE
ruleNAMESPACE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='../' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMESPACEAccess().getFullStopFullStopSolidusKeyword_0()); 
    }
)*    this_CID_1=RULE_CID    {
		$current.merge(this_CID_1);
    }

    { 
    newLeafNode(this_CID_1, grammarAccess.getNAMESPACEAccess().getCIDTerminalRuleCall_1()); 
    }
((
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMESPACEAccess().getSolidusKeyword_2_0_0()); 
    }

    |
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNAMESPACEAccess().getFullStopKeyword_2_0_1()); 
    }
)    this_CID_4=RULE_CID    {
		$current.merge(this_CID_4);
    }

    { 
    newLeafNode(this_CID_4, grammarAccess.getNAMESPACEAccess().getCIDTerminalRuleCall_2_1()); 
    }
)*)
    ;





// Entry rule entryRuleURI
entryRuleURI returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getURIRule()); } 
	 iv_ruleURI=ruleURI 
	 { $current=$iv_ruleURI.current.getText(); }  
	 EOF 
;

// Rule URI
ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_CID_0=RULE_CID    {
		$current.merge(this_CID_0);
    }

    { 
    newLeafNode(this_CID_0, grammarAccess.getURIAccess().getCIDTerminalRuleCall_0_0()); 
    }

	kw='://' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getURIAccess().getColonSolidusSolidusKeyword_0_1()); 
    }
)?
    { 
        newCompositeNode(grammarAccess.getURIAccess().getNAMESPACEParserRuleCall_1()); 
    }
    this_NAMESPACE_2=ruleNAMESPACE    {
		$current.merge(this_NAMESPACE_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleURISTRING
entryRuleURISTRING returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getURISTRINGRule()); } 
	 iv_ruleURISTRING=ruleURISTRING 
	 { $current=$iv_ruleURISTRING.current.getText(); }  
	 EOF 
;

// Rule URISTRING
ruleURISTRING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getURISTRINGAccess().getQuotationMarkKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getURISTRINGAccess().getURIParserRuleCall_1()); 
    }
    this_URI_1=ruleURI    {
		$current.merge(this_URI_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getURISTRINGAccess().getQuotationMarkKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleJUSTSPACE
entryRuleJUSTSPACE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJUSTSPACERule()); }
	 iv_ruleJUSTSPACE=ruleJUSTSPACE 
	 { $current=$iv_ruleJUSTSPACE.current; } 
	 EOF 
;

// Rule JUSTSPACE
ruleJUSTSPACE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getJUSTSPACEAccess().getJWSParserRuleCall_0()); 
	    }
		lv_J_0_0=ruleWS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJUSTSPACERule());
	        }
       		set(
       			$current, 
       			"J",
        		lv_J_0_0, 
        		"WS");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulenamespaceDeclaration
entryRulenamespaceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceDeclarationRule()); }
	 iv_rulenamespaceDeclaration=rulenamespaceDeclaration 
	 { $current=$iv_rulenamespaceDeclaration.current; } 
	 EOF 
;

// Rule namespaceDeclaration
rulenamespaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%namespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+((
(
		lv_name_2_0=RULE_CID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNamespaceDeclarationAccess().getNameCIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"CID");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamespaceDeclarationAccess().getEqualsSignKeyword_2_2());
    }
(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_2_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getUriURISTRINGParserRuleCall_3_0()); 
	    }
		lv_uri_6_0=ruleURISTRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamespaceDeclarationRule());
	        }
       		set(
       			$current, 
       			"uri",
        		lv_uri_6_0, 
        		"URISTRING");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_4()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNamespaceDeclarationAccess().getFullStopKeyword_5());
    }

    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getWSParserRuleCall_6()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulereadDeclaration
entryRulereadDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReadDeclarationRule()); }
	 iv_rulereadDeclaration=rulereadDeclaration 
	 { $current=$iv_rulereadDeclaration.current; } 
	 EOF 
;

// Rule readDeclaration
rulereadDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%read' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReadDeclarationAccess().getReadKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getReadDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getReadDeclarationAccess().getFileURISTRINGParserRuleCall_2_0()); 
	    }
		lv_file_2_0=ruleURISTRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadDeclarationRule());
	        }
       		set(
       			$current, 
       			"file",
        		lv_file_2_0, 
        		"URISTRING");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getReadDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReadDeclarationAccess().getFullStopKeyword_4());
    }

    { 
        newCompositeNode(grammarAccess.getReadDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGID
entryRuleGID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGIDRule()); } 
	 iv_ruleGID=ruleGID 
	 { $current=$iv_ruleGID.current.getText(); }  
	 EOF 
;

// Rule GID
ruleGID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_CID_0=RULE_CID    {
		$current.merge(this_CID_0);
    }

    { 
    newLeafNode(this_CID_0, grammarAccess.getGIDAccess().getCIDTerminalRuleCall_0_0()); 
    }

    |    this_ANY_OTHER_1=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_1);
    }

    { 
    newLeafNode(this_ANY_OTHER_1, grammarAccess.getGIDAccess().getANY_OTHERTerminalRuleCall_0_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getGIDAccess().getINTTerminalRuleCall_0_2()); 
    }
)+
    |(
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGIDAccess().getFullStopFullStopKeyword_1_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGIDAccess().getFullStopKeyword_1_1()); 
    }
)*))
    ;





// Entry rule entryRuleSOMETHING
entryRuleSOMETHING returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSOMETHINGRule()); } 
	 iv_ruleSOMETHING=ruleSOMETHING 
	 { $current=$iv_ruleSOMETHING.current.getText(); }  
	 EOF 
;

// Rule SOMETHING
ruleSOMETHING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ANY_OTHER_0=RULE_ANY_OTHER    {
		$current.merge(this_ANY_OTHER_0);
    }

    { 
    newLeafNode(this_ANY_OTHER_0, grammarAccess.getSOMETHINGAccess().getANY_OTHERTerminalRuleCall_0()); 
    }

    |    this_CID_1=RULE_CID    {
		$current.merge(this_CID_1);
    }

    { 
    newLeafNode(this_CID_1, grammarAccess.getSOMETHINGAccess().getCIDTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSOMETHINGAccess().getINTTerminalRuleCall_2()); 
    }

    |(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getFullStopKeyword_3_0()); 
    }
    this_CID_4=RULE_CID    {
		$current.merge(this_CID_4);
    }

    { 
    newLeafNode(this_CID_4, grammarAccess.getSOMETHINGAccess().getCIDTerminalRuleCall_3_1()); 
    }
)
    |
	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getColonKeyword_4()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getEqualsSignKeyword_5()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getLessThanSignKeyword_6()); 
    }

    |
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getHyphenMinusGreaterThanSignKeyword_7()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getPercentSignKeyword_8()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getHyphenMinusKeyword_9()); 
    }

    |(
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getFullStopFullStopKeyword_10_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSOMETHINGAccess().getFullStopKeyword_10_1()); 
    }
)*
    { 
        newCompositeNode(grammarAccess.getSOMETHINGAccess().getWSParserRuleCall_10_2()); 
    }
    this_WS_13=ruleWS    {
		$current.merge(this_WS_13);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getSOMETHINGAccess().getWSParserRuleCall_11()); 
    }
    this_WS_14=ruleWS    {
		$current.merge(this_WS_14);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;







// Entry rule entryRulesignatureDeclaration
entryRulesignatureDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignatureDeclarationRule()); }
	 iv_rulesignatureDeclaration=rulesignatureDeclaration 
	 { $current=$iv_rulesignatureDeclaration.current; } 
	 EOF 
;

// Rule signatureDeclaration
rulesignatureDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%sig' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSignatureDeclarationAccess().getSigKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getSigNameGIDParserRuleCall_2_0()); 
	    }
		lv_sigName_2_0=ruleGID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignatureDeclarationRule());
	        }
       		set(
       			$current, 
       			"sigName",
        		lv_sigName_2_0, 
        		"GID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSignatureDeclarationAccess().getEqualsSignKeyword_4());
    }
(
    { 
        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSignatureDeclarationAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getSigDefinitionsSigDefinitionsParserRuleCall_7_0()); 
	    }
		lv_sigDefinitions_7_0=rulesigDefinitions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignatureDeclarationRule());
	        }
       		add(
       			$current, 
       			"sigDefinitions",
        		lv_sigDefinitions_7_0, 
        		"sigDefinitions");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSignatureDeclarationAccess().getRightCurlyBracketKeyword_8());
    }
(
    { 
        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getWSParserRuleCall_9()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_10='.' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSignatureDeclarationAccess().getFullStopKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getSignatureDeclarationAccess().getWSParserRuleCall_11()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulesigDefinitions
entryRulesigDefinitions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigDefinitionsRule()); }
	 iv_rulesigDefinitions=rulesigDefinitions 
	 { $current=$iv_rulesigDefinitions.current; } 
	 EOF 
;

// Rule sigDefinitions
rulesigDefinitions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getSymbNameGIDParserRuleCall_0_0_0()); 
	    }
		lv_symbName_0_0=ruleGID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigDefinitionsRule());
	        }
       		set(
       			$current, 
       			"symbName",
        		lv_symbName_0_0, 
        		"GID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_0_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSigDefinitionsAccess().getColonKeyword_0_2_0());
    }

    |	otherlv_3=':=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSigDefinitionsAccess().getColonEqualsSignKeyword_0_2_1());
    }

    |	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSigDefinitionsAccess().getEqualsSignKeyword_0_2_2());
    }
)(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getSOMETHINGParserRuleCall_0_3()); 
    }
ruleSOMETHING
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSigDefinitionsAccess().getFullStopKeyword_0_4());
    }

    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_0_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_8='%include' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSigDefinitionsAccess().getIncludeKeyword_1_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_1_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getNamespaceNAMESPACEParserRuleCall_1_2_0()); 
	    }
		lv_namespace_10_0=ruleNAMESPACE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigDefinitionsRule());
	        }
       		set(
       			$current, 
       			"namespace",
        		lv_namespace_10_0, 
        		"NAMESPACE");
	        afterParserOrEnumRuleCall();
	    }

)
)((
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_1_3_0()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getIncludeOpsParserRuleCall_1_3_1()); 
    }
ruleincludeOps
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_13='.' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSigDefinitionsAccess().getFullStopKeyword_1_4());
    }

    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_1_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_15='%struct' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSigDefinitionsAccess().getStructKeyword_2_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_2_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getStructNameGIDParserRuleCall_2_2_0()); 
	    }
		lv_structName_17_0=ruleGID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigDefinitionsRule());
	        }
       		set(
       			$current, 
       			"structName",
        		lv_structName_17_0, 
        		"GID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_2_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSigDefinitionsAccess().getColonKeyword_2_4());
    }
(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getSOMETHINGParserRuleCall_2_5()); 
    }
ruleSOMETHING
    { 
        afterParserOrEnumRuleCall();
    }
)*(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getIncludeOpsParserRuleCall_2_6()); 
    }
ruleincludeOps
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_22='.' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSigDefinitionsAccess().getFullStopKeyword_2_7());
    }

    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_2_8()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
    |((
(
(
		lv_tmp_24_1=	'%meta' 
    {
        newLeafNode(lv_tmp_24_1, grammarAccess.getSigDefinitionsAccess().getTmpMetaKeyword_3_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_1, null);
	    }

    |		lv_tmp_24_2=	'%abbrev' 
    {
        newLeafNode(lv_tmp_24_2, grammarAccess.getSigDefinitionsAccess().getTmpAbbrevKeyword_3_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_2, null);
	    }

    |		lv_tmp_24_3=	'%name' 
    {
        newLeafNode(lv_tmp_24_3, grammarAccess.getSigDefinitionsAccess().getTmpNameKeyword_3_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_3, null);
	    }

    |		lv_tmp_24_4=	'%pattern' 
    {
        newLeafNode(lv_tmp_24_4, grammarAccess.getSigDefinitionsAccess().getTmpPatternKeyword_3_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_4, null);
	    }

    |		lv_tmp_24_5=	'%infix' 
    {
        newLeafNode(lv_tmp_24_5, grammarAccess.getSigDefinitionsAccess().getTmpInfixKeyword_3_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_5, null);
	    }

    |		lv_tmp_24_6=	'prefix' 
    {
        newLeafNode(lv_tmp_24_6, grammarAccess.getSigDefinitionsAccess().getTmpPrefixKeyword_3_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSigDefinitionsRule());
	        }
       		setWithLastConsumed($current, "tmp", lv_tmp_24_6, null);
	    }

)

)
)(
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getSOMETHINGParserRuleCall_3_1()); 
    }
ruleSOMETHING
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_26='.' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getSigDefinitionsAccess().getFullStopKeyword_3_2());
    }

    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getWSParserRuleCall_3_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getSigDefinitionsAccess().getJUSTSPACEParserRuleCall_4()); 
    }
    this_JUSTSPACE_28=ruleJUSTSPACE
    { 
        $current = $this_JUSTSPACE_28.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleincludeOps
entryRuleincludeOps returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeOpsRule()); } 
	 iv_ruleincludeOps=ruleincludeOps 
	 { $current=$iv_ruleincludeOps.current.getText(); }  
	 EOF 
;

// Rule includeOps
ruleincludeOps returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='%open' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncludeOpsAccess().getOpenKeyword_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getIncludeOpsAccess().getSOMETHINGParserRuleCall_1()); 
    }
    this_SOMETHING_1=ruleSOMETHING    {
		$current.merge(this_SOMETHING_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;







// Entry rule entryRuleviewDeclaration
entryRuleviewDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewDeclarationRule()); }
	 iv_ruleviewDeclaration=ruleviewDeclaration 
	 { $current=$iv_ruleviewDeclaration.current; } 
	 EOF 
;

// Rule viewDeclaration
ruleviewDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%view' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewDeclarationAccess().getViewKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_1()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getViewIDGIDParserRuleCall_2_0()); 
	    }
		lv_viewID_2_0=ruleGID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"viewID",
        		lv_viewID_2_0, 
        		"GID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_3()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getViewDeclarationAccess().getColonKeyword_4());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_5()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getFromNAMESPACEParserRuleCall_6_0()); 
	    }
		lv_from_6_0=ruleNAMESPACE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_6_0, 
        		"NAMESPACE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_7()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_8='->' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getViewDeclarationAccess().getHyphenMinusGreaterThanSignKeyword_8());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_9()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getToNAMESPACEParserRuleCall_10_0()); 
	    }
		lv_to_10_0=ruleNAMESPACE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_10_0, 
        		"NAMESPACE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_11()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getViewDeclarationAccess().getEqualsSignKeyword_12());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_13()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getViewDeclarationAccess().getLeftCurlyBracketKeyword_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewDeclarationAccess().getViewDefinitionsSigDefinitionsParserRuleCall_15_0()); 
	    }
		lv_viewDefinitions_15_0=rulesigDefinitions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewDeclarationRule());
	        }
       		add(
       			$current, 
       			"viewDefinitions",
        		lv_viewDefinitions_15_0, 
        		"sigDefinitions");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getViewDeclarationAccess().getRightCurlyBracketKeyword_16());
    }
(
    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_17()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_18='.' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getViewDeclarationAccess().getFullStopKeyword_18());
    }

    { 
        newCompositeNode(grammarAccess.getViewDeclarationAccess().getWSParserRuleCall_19()); 
    }
ruleWS
    { 
        afterParserOrEnumRuleCall();
    }
)
;





RULE_INT : ('0'..'9')+;

RULE_SP : (' '|'\t'|'\r'|'\n');

RULE_CID : ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_'|'#'|'?')+;

RULE_ML_COMMENT : '%{' ( options {greedy=false;} : . )*'}%';

RULE_ML2_COMMENT : '%*' ( options {greedy=false;} : . )*'*%';

RULE_SL_COMMENT : '%' (' '|'%') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


